{"ast":null,"code":"import Axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL;\nAxios.defaults.baseURL = API_URL;\nexport class HttpService {\n  constructor() {\n    this._axios = Axios.create();\n    this.addRequestInterceptor = (onFulfilled, onRejected) => {\n      this._axios.interceptors.request.use(onFulfilled, onRejected);\n    };\n    this.addResponseInterceptor = (onFulfilled, onRejected) => {\n      this._axios.interceptors.response.use(onFulfilled, onRejected);\n    };\n    this.get = async url => await this.request(this.getOptionsConfig(\"get\", url));\n    this.post = async (url, data) => await this.request(this.getOptionsConfig(\"post\", url, data));\n    this.put = async (url, data) => await this.request(this.getOptionsConfig(\"put\", url, data));\n    this.patch = async (url, data) => await this.request(this.getOptionsConfig(\"patch\", url, data));\n    this.delete = async url => await this.request(this.getOptionsConfig(\"delete\", url));\n    this.getOptionsConfig = (method, url, data) => {\n      return {\n        method,\n        url,\n        data,\n        headers: {\n          \"Content-Type\": \"application/vnd.api+json\",\n          Accept: \"application/vnd.api+json\"\n        }\n      };\n    };\n  }\n  request(options) {\n    return new Promise((resolve, reject) => {\n      this._axios.request(options).then(res => resolve(res.data)).catch(ex => reject(ex.response.data));\n    });\n  }\n}\nexport default new HttpService();","map":{"version":3,"names":["Axios","API_URL","process","env","REACT_APP_API_URL","defaults","baseURL","HttpService","constructor","_axios","create","addRequestInterceptor","onFulfilled","onRejected","interceptors","request","use","addResponseInterceptor","response","get","url","getOptionsConfig","post","data","put","patch","delete","method","headers","Accept","options","Promise","resolve","reject","then","res","catch","ex"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/services/http.service.js"],"sourcesContent":["import Axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\nAxios.defaults.baseURL = API_URL;\n\nexport class HttpService {\n  _axios = Axios.create();\n\n  addRequestInterceptor = (onFulfilled, onRejected) => {\n    this._axios.interceptors.request.use(onFulfilled, onRejected);\n  };\n\n  addResponseInterceptor = (onFulfilled, onRejected) => {\n    this._axios.interceptors.response.use(onFulfilled, onRejected);\n  };\n\n  get = async (url) => await this.request(this.getOptionsConfig(\"get\", url));\n\n  post = async (url, data) => await this.request(this.getOptionsConfig(\"post\", url, data));\n\n  put = async (url, data) => await this.request(this.getOptionsConfig(\"put\", url, data));\n\n  patch = async (url, data) => await this.request(this.getOptionsConfig(\"patch\", url, data));\n\n  delete = async (url) => await this.request(this.getOptionsConfig(\"delete\", url));\n\n  getOptionsConfig = (method, url, data) => {\n    return {\n      method,\n      url,\n      data,\n      headers: { \"Content-Type\": \"application/vnd.api+json\", Accept: \"application/vnd.api+json\" },\n    };\n  };\n\n  request(options) {\n    return new Promise((resolve, reject) => {\n      this._axios\n        .request(options)\n        .then((res) => resolve(res.data))\n        .catch((ex) => reject(ex.response.data));\n    });\n  }\n}\n\nexport default new HttpService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7CJ,KAAK,CAACK,QAAQ,CAACC,OAAO,GAAGL,OAAO;AAEhC,OAAO,MAAMM,WAAW,CAAC;EAAAC,YAAA;IAAA,KACvBC,MAAM,GAAGT,KAAK,CAACU,MAAM,CAAC,CAAC;IAAA,KAEvBC,qBAAqB,GAAG,CAACC,WAAW,EAAEC,UAAU,KAAK;MACnD,IAAI,CAACJ,MAAM,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACJ,WAAW,EAAEC,UAAU,CAAC;IAC/D,CAAC;IAAA,KAEDI,sBAAsB,GAAG,CAACL,WAAW,EAAEC,UAAU,KAAK;MACpD,IAAI,CAACJ,MAAM,CAACK,YAAY,CAACI,QAAQ,CAACF,GAAG,CAACJ,WAAW,EAAEC,UAAU,CAAC;IAChE,CAAC;IAAA,KAEDM,GAAG,GAAG,MAAOC,GAAG,IAAK,MAAM,IAAI,CAACL,OAAO,CAAC,IAAI,CAACM,gBAAgB,CAAC,KAAK,EAAED,GAAG,CAAC,CAAC;IAAA,KAE1EE,IAAI,GAAG,OAAOF,GAAG,EAAEG,IAAI,KAAK,MAAM,IAAI,CAACR,OAAO,CAAC,IAAI,CAACM,gBAAgB,CAAC,MAAM,EAAED,GAAG,EAAEG,IAAI,CAAC,CAAC;IAAA,KAExFC,GAAG,GAAG,OAAOJ,GAAG,EAAEG,IAAI,KAAK,MAAM,IAAI,CAACR,OAAO,CAAC,IAAI,CAACM,gBAAgB,CAAC,KAAK,EAAED,GAAG,EAAEG,IAAI,CAAC,CAAC;IAAA,KAEtFE,KAAK,GAAG,OAAOL,GAAG,EAAEG,IAAI,KAAK,MAAM,IAAI,CAACR,OAAO,CAAC,IAAI,CAACM,gBAAgB,CAAC,OAAO,EAAED,GAAG,EAAEG,IAAI,CAAC,CAAC;IAAA,KAE1FG,MAAM,GAAG,MAAON,GAAG,IAAK,MAAM,IAAI,CAACL,OAAO,CAAC,IAAI,CAACM,gBAAgB,CAAC,QAAQ,EAAED,GAAG,CAAC,CAAC;IAAA,KAEhFC,gBAAgB,GAAG,CAACM,MAAM,EAAEP,GAAG,EAAEG,IAAI,KAAK;MACxC,OAAO;QACLI,MAAM;QACNP,GAAG;QACHG,IAAI;QACJK,OAAO,EAAE;UAAE,cAAc,EAAE,0BAA0B;UAAEC,MAAM,EAAE;QAA2B;MAC5F,CAAC;IACH,CAAC;EAAA;EAEDd,OAAOA,CAACe,OAAO,EAAE;IACf,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAACxB,MAAM,CACRM,OAAO,CAACe,OAAO,CAAC,CAChBI,IAAI,CAAEC,GAAG,IAAKH,OAAO,CAACG,GAAG,CAACZ,IAAI,CAAC,CAAC,CAChCa,KAAK,CAAEC,EAAE,IAAKJ,MAAM,CAACI,EAAE,CAACnB,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIhB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}