{"ast":null,"code":"/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/import{useState,useEffect}from\"react\";// prop-types is a library for typechecking of props\n// @mui material components\nimport Grid from\"@mui/material/Grid\";import AppBar from\"@mui/material/AppBar\";import Tabs from\"@mui/material/Tabs\";import Tab from\"@mui/material/Tab\";// Material Dashboard 2 PRO React components\nimport MDBox from\"components/MDBox\";// Material Dashboard 2 PRO React base styles\nimport breakpoints from\"assets/theme/base/breakpoints\";// Material Dashboard 2 PRO React examples\nimport DashboardLayout from\"examples/LayoutContainers/DashboardLayout\";import DashboardNavbar from\"examples/Navbars/DashboardNavbar\";import Footer from\"examples/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BaseLayout(_ref){let{stickyNavbar,children}=_ref;const[tabsOrientation,setTabsOrientation]=useState(\"horizontal\");const[tabValue,setTabValue]=useState(0);useEffect(()=>{// A function that sets the orientation state of the tabs.\nfunction handleTabsOrientation(){return window.innerWidth<breakpoints.values.sm?setTabsOrientation(\"vertical\"):setTabsOrientation(\"horizontal\");}/** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */window.addEventListener(\"resize\",handleTabsOrientation);// Call the handleTabsOrientation function to set the state with the initial value.\nhandleTabsOrientation();// Remove event listener on cleanup\nreturn()=>window.removeEventListener(\"resize\",handleTabsOrientation);},[tabsOrientation]);const handleSetTabValue=(event,newValue)=>setTabValue(newValue);return/*#__PURE__*/_jsxs(DashboardLayout,{children:[/*#__PURE__*/_jsx(DashboardNavbar,{absolute:!stickyNavbar,isMini:true}),/*#__PURE__*/_jsxs(MDBox,{mt:stickyNavbar?3:10,children:[/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,lg:4,children:/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Tabs,{orientation:tabsOrientation,value:tabValue,onChange:handleSetTabValue,children:[/*#__PURE__*/_jsx(Tab,{label:\"Messages\"}),/*#__PURE__*/_jsx(Tab,{label:\"Social\"}),/*#__PURE__*/_jsx(Tab,{label:\"Notifications\"}),/*#__PURE__*/_jsx(Tab,{label:\"Backup\"})]})})})}),children]}),/*#__PURE__*/_jsx(Footer,{})]});}// Setting default values for the props of BaseLayout\nBaseLayout.defaultProps={stickyNavbar:false};// Typechecking props for BaseLayout\nexport default BaseLayout;","map":{"version":3,"names":["useState","useEffect","Grid","AppBar","Tabs","Tab","MDBox","breakpoints","DashboardLayout","DashboardNavbar","Footer","jsx","_jsx","jsxs","_jsxs","BaseLayout","_ref","stickyNavbar","children","tabsOrientation","setTabsOrientation","tabValue","setTabValue","handleTabsOrientation","window","innerWidth","values","sm","addEventListener","removeEventListener","handleSetTabValue","event","newValue","absolute","isMini","mt","container","item","xs","lg","position","orientation","value","onChange","label","defaultProps"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/layouts/pages/account/components/BaseLayout/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 PRO React base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\n// Material Dashboard 2 PRO React examples\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\nfunction BaseLayout({ stickyNavbar, children }) {\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm\n        ? setTabsOrientation(\"vertical\")\n        : setTabsOrientation(\"horizontal\");\n    }\n\n    /** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleTabsOrientation);\n\n    // Call the handleTabsOrientation function to set the state with the initial value.\n    handleTabsOrientation();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar absolute={!stickyNavbar} isMini />\n      <MDBox mt={stickyNavbar ? 3 : 10}>\n        <Grid container>\n          <Grid item xs={12} sm={8} lg={4}>\n            <AppBar position=\"static\">\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\n                <Tab label=\"Messages\" />\n                <Tab label=\"Social\" />\n                <Tab label=\"Notifications\" />\n                <Tab label=\"Backup\" />\n              </Tabs>\n            </AppBar>\n          </Grid>\n        </Grid>\n        {children}\n      </MDBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\n// Setting default values for the props of BaseLayout\nBaseLayout.defaultProps = {\n  stickyNavbar: false,\n};\n\n// Typechecking props for BaseLayout\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default BaseLayout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}