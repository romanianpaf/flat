{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Charts/LineCharts/ProgressLineChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDProgress from \"components/MDProgress\";\n\n// ProgressLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ProgressLineChart/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressLineChart({\n  color,\n  icon,\n  title,\n  count,\n  progress,\n  height,\n  chart\n}) {\n  _s();\n  const {\n    data,\n    options\n  } = configs(color, chart.labels || [], title, chart.data || []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      alignItems: \"center\",\n      pt: 2,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        width: \"3rem\",\n        height: \"3rem\",\n        display: \"grid\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"md\",\n        shadow: \"md\",\n        color: \"white\",\n        bgColor: color,\n        variant: \"gradient\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"default\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        ml: 2,\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          textTransform: \"capitalize\",\n          color: \"text\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), count ? /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h5\",\n          fontWeight: \"bold\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        width: \"25%\",\n        ml: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          display: \"block\",\n          variant: \"caption\",\n          fontWeight: \"medium\",\n          color: \"text\",\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          mt: 0.25,\n          children: /*#__PURE__*/_jsxDEV(MDProgress, {\n            variant: \"gradient\",\n            color: color,\n            value: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), useMemo(() => /*#__PURE__*/_jsxDEV(MDBox, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"line\",\n        data: data,\n        options: options,\n        style: {\n          height\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), [chart, height, color])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of ProgressLineChart\n_s(ProgressLineChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = ProgressLineChart;\nProgressLineChart.defaultProps = {\n  color: \"info\",\n  count: 0,\n  height: \"6.25rem\"\n};\n\n// Typechecking props for the ProgressLineChart\nProgressLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  progress: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default ProgressLineChart;\nvar _c;\n$RefreshReg$(_c, \"ProgressLineChart\");","map":{"version":3,"names":["useMemo","PropTypes","Chart","Card","Icon","MDBox","MDTypography","MDProgress","configs","jsxDEV","_jsxDEV","ProgressLineChart","color","icon","title","count","progress","height","chart","_s","data","options","labels","children","display","alignItems","pt","px","width","justifyContent","borderRadius","shadow","bgColor","variant","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","ml","lineHeight","fontWeight","textTransform","mt","value","type","style","_c","defaultProps","propTypes","oneOf","node","isRequired","string","oneOfType","number","objectOf","array","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Charts/LineCharts/ProgressLineChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDProgress from \"components/MDProgress\";\n\n// ProgressLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ProgressLineChart/config\";\n\nfunction ProgressLineChart({ color, icon, title, count, progress, height, chart }) {\n  const { data, options } = configs(color, chart.labels || [], title, chart.data || []);\n\n  return (\n    <Card>\n      <MDBox display=\"flex\" alignItems=\"center\" pt={2} px={2}>\n        <MDBox\n          width=\"3rem\"\n          height=\"3rem\"\n          display=\"grid\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          borderRadius=\"md\"\n          shadow=\"md\"\n          color=\"white\"\n          bgColor={color}\n          variant=\"gradient\"\n        >\n          <Icon fontSize=\"default\">{icon}</Icon>\n        </MDBox>\n        <MDBox ml={2} lineHeight={1}>\n          <MDTypography\n            variant=\"button\"\n            fontWeight=\"regular\"\n            textTransform=\"capitalize\"\n            color=\"text\"\n          >\n            {title}\n          </MDTypography>\n          {count ? (\n            <MDTypography variant=\"h5\" fontWeight=\"bold\">\n              {count}\n            </MDTypography>\n          ) : null}\n        </MDBox>\n        <MDBox width=\"25%\" ml=\"auto\">\n          <MDTypography display=\"block\" variant=\"caption\" fontWeight=\"medium\" color=\"text\">\n            {progress}%\n          </MDTypography>\n          <MDBox mt={0.25}>\n            <MDProgress variant=\"gradient\" color={color} value={progress} />\n          </MDBox>\n        </MDBox>\n      </MDBox>\n      {useMemo(\n        () => (\n          <MDBox mt={2}>\n            <Chart type=\"line\" data={data} options={options} style={{ height }} />\n          </MDBox>\n        ),\n        [chart, height, color]\n      )}\n    </Card>\n  );\n}\n\n// Setting default values for the props of ProgressLineChart\nProgressLineChart.defaultProps = {\n  color: \"info\",\n  count: 0,\n  height: \"6.25rem\",\n};\n\n// Typechecking props for the ProgressLineChart\nProgressLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  progress: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default ProgressLineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}