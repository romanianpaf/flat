{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/layouts/pages/rtl/components/Chart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart as ReactChart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 PRO React helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// Chart configurations\nimport configs from \"layouts/pages/widgets/components/Chart/configs\";\n\n// Material Dashboard 2 PRO React base styles\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  title,\n  count,\n  percentage,\n  chart\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const {\n    data,\n    options\n  } = chartData;\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map(dataset => ({\n      ...dataset,\n      tension: 0.4,\n      pointRadius: 0,\n      borderWidth: 2,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color].main, 0.02)\n    }));\n    setChartData(configs(chart.labels, chartDatasets));\n  }, [chart]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      lineHeight: 1,\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"button\",\n        textTransform: \"capitalize\",\n        fontWeight: \"medium\",\n        color: \"text\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h5\",\n        fontWeight: \"bold\",\n        color: \"dark\",\n        children: [count, \"\\xA0\", /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"bold\",\n          color: percentage.color,\n          children: percentage.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), useMemo(() => /*#__PURE__*/_jsxDEV(MDBox, {\n      ref: chartRef,\n      sx: {\n        height: \"5.375rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactChart, {\n        type: \"line\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), [chartData])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n// Typechecking props for the Chart\n_s(Chart, \"n3wPcHgMRERcqUWkVtpcWGQ3sy8=\");\n_c = Chart;\nChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }).isRequired,\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useRef","useEffect","useState","useMemo","PropTypes","Chart","ReactChart","Card","MDBox","MDTypography","gradientChartLine","configs","colors","jsxDEV","_jsxDEV","title","count","percentage","chart","_s","chartRef","chartData","setChartData","data","options","chartDatasets","datasets","map","dataset","tension","pointRadius","borderWidth","borderColor","color","main","fill","maxBarThickness","backgroundColor","current","children","labels","p","lineHeight","variant","textTransform","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","label","ref","sx","height","type","_c","propTypes","string","isRequired","oneOfType","node","shape","oneOf","objectOf","array","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/layouts/pages/rtl/components/Chart/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart as ReactChart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 PRO React helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// Chart configurations\nimport configs from \"layouts/pages/widgets/components/Chart/configs\";\n\n// Material Dashboard 2 PRO React base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction Chart({ title, count, percentage, chart }) {\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const { data, options } = chartData;\n\n  useEffect(() => {\n    const chartDatasets = chart.datasets.map((dataset) => ({\n      ...dataset,\n      tension: 0.4,\n      pointRadius: 0,\n      borderWidth: 2,\n      borderColor: colors[dataset.color].main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(\n        chartRef.current.children[0],\n        colors[dataset.color].main,\n        0.02\n      ),\n    }));\n\n    setChartData(configs(chart.labels, chartDatasets));\n  }, [chart]);\n\n  return (\n    <Card>\n      <MDBox p={2} lineHeight={1}>\n        <MDTypography variant=\"button\" textTransform=\"capitalize\" fontWeight=\"medium\" color=\"text\">\n          {title}\n        </MDTypography>\n        <MDTypography variant=\"h5\" fontWeight=\"bold\" color=\"dark\">\n          {count}&nbsp;\n          <MDTypography variant=\"button\" fontWeight=\"bold\" color={percentage.color}>\n            {percentage.label}\n          </MDTypography>\n        </MDTypography>\n      </MDBox>\n      {useMemo(\n        () => (\n          <MDBox ref={chartRef} sx={{ height: \"5.375rem\" }}>\n            <ReactChart type=\"line\" data={data} options={options} />\n          </MDBox>\n        ),\n        [chartData]\n      )}\n    </Card>\n  );\n}\n\n// Typechecking props for the Chart\nChart.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  }).isRequired,\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}