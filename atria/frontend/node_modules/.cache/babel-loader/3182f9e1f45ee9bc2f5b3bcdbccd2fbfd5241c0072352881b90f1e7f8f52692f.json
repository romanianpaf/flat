{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Cards/StatisticsCards/DefaultStatisticsCard/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 PRO React contexts\nimport { useMaterialUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultStatisticsCard({\n  title,\n  count,\n  percentage,\n  dropdown\n}) {\n  _s();\n  const [controller] = useMaterialUIController();\n  const {\n    darkMode\n  } = controller;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 7,\n          children: [/*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 0.5,\n            lineHeight: 1,\n            children: /*#__PURE__*/_jsxDEV(MDTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              color: \"text\",\n              textTransform: \"capitalize\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            lineHeight: 1,\n            children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n              variant: \"button\",\n              fontWeight: \"bold\",\n              color: percentage.color,\n              children: [percentage.value, \"\\xA0\", /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"button\",\n                fontWeight: \"regular\",\n                color: darkMode ? \"text\" : \"secondary\",\n                children: percentage.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: dropdown && /*#__PURE__*/_jsxDEV(MDBox, {\n            width: \"100%\",\n            textAlign: \"right\",\n            lineHeight: 1,\n            children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n              variant: \"caption\",\n              color: \"secondary\",\n              fontWeight: \"regular\",\n              sx: {\n                cursor: \"pointer\"\n              },\n              onClick: dropdown.action,\n              children: dropdown.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), dropdown.menu]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of DefaultStatisticsCard\n_s(DefaultStatisticsCard, \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n});\n_c = DefaultStatisticsCard;\nDefaultStatisticsCard.defaultProps = {\n  percentage: {\n    color: \"success\",\n    value: \"\",\n    label: \"\"\n  },\n  dropdown: false\n};\n\n// Typechecking props for the DefaultStatisticsCard\nDefaultStatisticsCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"white\"]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string\n  }),\n  dropdown: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    action: PropTypes.func,\n    menu: PropTypes.node,\n    value: PropTypes.string\n  })])\n};\nexport default DefaultStatisticsCard;\nvar _c;\n$RefreshReg$(_c, \"DefaultStatisticsCard\");","map":{"version":3,"names":["PropTypes","Card","Grid","MDBox","MDTypography","useMaterialUIController","jsxDEV","_jsxDEV","DefaultStatisticsCard","title","count","percentage","dropdown","_s","controller","darkMode","children","p","container","item","xs","mb","lineHeight","variant","fontWeight","color","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","value","label","width","textAlign","sx","cursor","onClick","action","menu","_c","defaultProps","propTypes","string","isRequired","oneOfType","number","shape","oneOf","bool","func","node","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Cards/StatisticsCards/DefaultStatisticsCard/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 PRO React contexts\nimport { useMaterialUIController } from \"context\";\n\nfunction DefaultStatisticsCard({ title, count, percentage, dropdown }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  return (\n    <Card>\n      <MDBox p={2}>\n        <Grid container>\n          <Grid item xs={7}>\n            <MDBox mb={0.5} lineHeight={1}>\n              <MDTypography\n                variant=\"button\"\n                fontWeight=\"medium\"\n                color=\"text\"\n                textTransform=\"capitalize\"\n              >\n                {title}\n              </MDTypography>\n            </MDBox>\n            <MDBox lineHeight={1}>\n              <MDTypography variant=\"h5\" fontWeight=\"bold\">\n                {count}\n              </MDTypography>\n              <MDTypography variant=\"button\" fontWeight=\"bold\" color={percentage.color}>\n                {percentage.value}&nbsp;\n                <MDTypography\n                  variant=\"button\"\n                  fontWeight=\"regular\"\n                  color={darkMode ? \"text\" : \"secondary\"}\n                >\n                  {percentage.label}\n                </MDTypography>\n              </MDTypography>\n            </MDBox>\n          </Grid>\n          <Grid item xs={5}>\n            {dropdown && (\n              <MDBox width=\"100%\" textAlign=\"right\" lineHeight={1}>\n                <MDTypography\n                  variant=\"caption\"\n                  color=\"secondary\"\n                  fontWeight=\"regular\"\n                  sx={{ cursor: \"pointer\" }}\n                  onClick={dropdown.action}\n                >\n                  {dropdown.value}\n                </MDTypography>\n                {dropdown.menu}\n              </MDBox>\n            )}\n          </Grid>\n        </Grid>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultStatisticsCard\nDefaultStatisticsCard.defaultProps = {\n  percentage: {\n    color: \"success\",\n    value: \"\",\n    label: \"\",\n  },\n  dropdown: false,\n};\n\n// Typechecking props for the DefaultStatisticsCard\nDefaultStatisticsCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"white\",\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string,\n  }),\n  dropdown: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      action: PropTypes.func,\n      menu: PropTypes.node,\n      value: PropTypes.string,\n    }),\n  ]),\n};\n\nexport default DefaultStatisticsCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}