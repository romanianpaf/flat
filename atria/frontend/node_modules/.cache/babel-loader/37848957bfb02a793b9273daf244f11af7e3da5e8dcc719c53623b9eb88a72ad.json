{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Sidenav/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect, useState, useContext } from \"react\";\n\n// react-router-dom components\nimport { useLocation, NavLink } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 PRO React examples\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\nimport SidenavList from \"examples/Sidenav/SidenavList\";\nimport SidenavItem from \"examples/Sidenav/SidenavItem\";\n\n// Custom styles for the Sidenav\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\";\n\n// Material Dashboard 2 PRO React context\nimport { useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav, AuthContext } from \"context\";\nimport AuthService from \"services/auth-service\";\nimport { Can } from \"Can\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidenav({\n  color,\n  brand,\n  brandName,\n  routes,\n  ...rest\n}) {\n  _s();\n  const authContext = useContext(AuthContext);\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const [openNestedCollapse, setOpenNestedCollapse] = useState(false);\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode\n  } = controller;\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const collapseName = pathname.split(\"/\").slice(1)[0];\n  const items = pathname.split(\"/\").slice(1);\n  const itemParentName = items[1];\n  const itemName = items[items.length - 1];\n  let textColor = \"white\";\n  if (transparentSidenav || whiteSidenav && !darkMode) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n  useEffect(() => {\n    setOpenCollapse(collapseName);\n    setOpenNestedCollapse(itemParentName);\n  }, []);\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\n    }\n\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleMiniSidenav);\n\n    // Call the handleMiniSidenav function to set the state with the initial value.\n    handleMiniSidenav();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]);\n  const handleLogOut = async () => {\n    try {\n      await AuthService.logout();\n      authContext.logout();\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n  // Render all the nested collapse items from the routes.js\n  const renderNestedCollapse = collapse => {\n    const template = collapse.map(({\n      name,\n      route,\n      key,\n      href\n    }) => href ? /*#__PURE__*/_jsxDEV(Link, {\n      href: href,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      sx: {\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n        name: name,\n        nested: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n      to: route,\n      sx: {\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n        name: name,\n        active: route === pathname,\n        nested: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this));\n    return template;\n  };\n  // Render the all the collpases from the routes.js\n  const renderCollapse = collapses => collapses.map(({\n    name,\n    collapse,\n    route,\n    href,\n    key,\n    type\n  }) => {\n    let returnValue;\n    if (collapse) {\n      returnValue = /*#__PURE__*/_jsxDEV(SidenavItem, {\n        color: color,\n        name: name,\n        active: key === itemParentName ? \"isParent\" : false,\n        open: openNestedCollapse === key,\n        onClick: ({\n          currentTarget\n        }) => openNestedCollapse === key && currentTarget.classList.contains(\"MuiListItem-root\") ? setOpenNestedCollapse(false) : setOpenNestedCollapse(key),\n        children: renderNestedCollapse(collapse)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this);\n    } else {\n      if (name !== \"Logout\") {\n        returnValue = href ? type ? /*#__PURE__*/_jsxDEV(Can, {\n          I: \"edit\",\n          this: type,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: href,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            sx: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n              color: color,\n              name: name,\n              active: key === itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          href: href,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          sx: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n            color: color,\n            name: name,\n            active: key === itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this) : type ? /*#__PURE__*/_jsxDEV(Can, {\n          I: \"edit\",\n          a: type,\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: route,\n            sx: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n              color: color,\n              name: name,\n              active: key === itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n          to: route,\n          sx: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(SidenavItem, {\n            color: color,\n            name: name,\n            active: key === itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this);\n      } else {\n        returnValue = /*#__PURE__*/_jsxDEV(MDBox, {\n          children: /*#__PURE__*/_jsxDEV(MDButton, {\n            fullWidth: true,\n            variant: \"gradient\",\n            color: color,\n            type: \"button\",\n            onClick: handleLogOut,\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(SidenavList, {\n      children: returnValue\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 14\n    }, this);\n  });\n\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\n  const renderRoutes = routes.map(({\n    type,\n    name,\n    icon,\n    title,\n    collapse,\n    noCollapse,\n    key,\n    href,\n    route\n  }) => {\n    let returnValue;\n    if (type === \"collapse\") {\n      if (href) {\n        returnValue = /*#__PURE__*/_jsxDEV(Link, {\n          href: href,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          sx: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n            name: name,\n            icon: icon,\n            active: key === collapseName,\n            noCollapse: noCollapse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this);\n      } else if (noCollapse && route) {\n        returnValue = /*#__PURE__*/_jsxDEV(NavLink, {\n          to: route,\n          children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n            name: name,\n            icon: icon,\n            noCollapse: noCollapse,\n            active: key === collapseName,\n            children: collapse ? renderCollapse(collapse) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this);\n      } else {\n        returnValue = /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName,\n          open: openCollapse === key,\n          onClick: () => openCollapse === key ? setOpenCollapse(false) : setOpenCollapse(key),\n          children: collapse ? renderCollapse(collapse) : null\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this);\n      }\n    } else if (type === \"title\") {\n      returnValue = /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: textColor,\n        display: \"block\",\n        variant: \"caption\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        pl: 3,\n        mt: 2,\n        mb: 1,\n        ml: 1,\n        children: title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this);\n    } else if (type === \"divider\") {\n      returnValue = /*#__PURE__*/_jsxDEV(Divider, {\n        light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this);\n    }\n    return returnValue;\n  });\n  return /*#__PURE__*/_jsxDEV(SidenavRoot, {\n    ...rest,\n    variant: \"permanent\",\n    ownerState: {\n      transparentSidenav,\n      whiteSidenav,\n      miniSidenav,\n      darkMode\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      pt: 3,\n      pb: 1,\n      px: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"block\",\n          xl: \"none\"\n        },\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        p: 1.625,\n        onClick: closeSidenav,\n        sx: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        component: NavLink,\n        to: \"/\",\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [brand && /*#__PURE__*/_jsxDEV(MDBox, {\n          component: \"img\",\n          src: brand,\n          alt: \"Brand\",\n          width: \"2rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          width: !brandName && \"100%\",\n          sx: theme => sidenavLogoLabel(theme, {\n            miniSidenav\n          }),\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            component: \"h6\",\n            variant: \"button\",\n            fontWeight: \"medium\",\n            color: textColor,\n            children: brandName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: renderRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of Sidenav\n_s(Sidenav, \"lF7pdIs76KTN5yHcwqZfTqYCc/A=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n_c = Sidenav;\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\"\n};\n\n// Typechecking props for the Sidenav\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Sidenav;\nvar _c;\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"names":["useEffect","useState","useContext","useLocation","NavLink","PropTypes","List","Divider","Link","Icon","MDBox","MDTypography","MDButton","SidenavCollapse","SidenavList","SidenavItem","SidenavRoot","sidenavLogoLabel","useMaterialUIController","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","AuthContext","AuthService","Can","jsxDEV","_jsxDEV","Sidenav","color","brand","brandName","routes","rest","_s","authContext","openCollapse","setOpenCollapse","openNestedCollapse","setOpenNestedCollapse","controller","dispatch","miniSidenav","transparentSidenav","whiteSidenav","darkMode","location","pathname","collapseName","split","slice","items","itemParentName","itemName","length","textColor","closeSidenav","handleMiniSidenav","window","innerWidth","addEventListener","removeEventListener","handleLogOut","logout","err","console","error","renderNestedCollapse","collapse","template","map","name","route","key","href","target","rel","sx","textDecoration","children","nested","fileName","_jsxFileName","lineNumber","columnNumber","to","active","renderCollapse","collapses","type","returnValue","open","onClick","currentTarget","classList","contains","I","this","a","fullWidth","variant","renderRoutes","icon","title","noCollapse","display","fontWeight","textTransform","pl","mt","mb","ml","light","ownerState","pt","pb","px","textAlign","xs","xl","position","top","right","p","cursor","component","alignItems","src","alt","width","theme","_c","defaultProps","propTypes","oneOf","string","isRequired","arrayOf","object","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Sidenav/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect, useState, useContext } from \"react\";\n\n// react-router-dom components\nimport { useLocation, NavLink } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 PRO React examples\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\nimport SidenavList from \"examples/Sidenav/SidenavList\";\nimport SidenavItem from \"examples/Sidenav/SidenavItem\";\n\n// Custom styles for the Sidenav\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\";\n\n// Material Dashboard 2 PRO React context\nimport {\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  AuthContext,\n} from \"context\";\n\nimport AuthService from \"services/auth-service\";\nimport { Can } from \"Can\";\n\nfunction Sidenav({ color, brand, brandName, routes, ...rest }) {\n  const authContext = useContext(AuthContext);\n\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const [openNestedCollapse, setOpenNestedCollapse] = useState(false);\n  const [controller, dispatch] = useMaterialUIController();\n  const { miniSidenav, transparentSidenav, whiteSidenav, darkMode } = controller;\n  const location = useLocation();\n  const { pathname } = location;\n  const collapseName = pathname.split(\"/\").slice(1)[0];\n  const items = pathname.split(\"/\").slice(1);\n  const itemParentName = items[1];\n  const itemName = items[items.length - 1];\n\n  let textColor = \"white\";\n\n  if (transparentSidenav || (whiteSidenav && !darkMode)) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n\n  useEffect(() => {\n    setOpenCollapse(collapseName);\n    setOpenNestedCollapse(itemParentName);\n  }, []);\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\n    }\n\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleMiniSidenav);\n\n    // Call the handleMiniSidenav function to set the state with the initial value.\n    handleMiniSidenav();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]);\n\n  const handleLogOut = async () => {\n    try {\n      await AuthService.logout();\n      authContext.logout();\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n  // Render all the nested collapse items from the routes.js\n  const renderNestedCollapse = (collapse) => {\n    const template = collapse.map(({ name, route, key, href }) =>\n      href ? (\n        <Link\n          key={key}\n          href={href}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          sx={{ textDecoration: \"none\" }}\n        >\n          <SidenavItem name={name} nested />\n        </Link>\n      ) : (\n        <NavLink to={route} key={key} sx={{ textDecoration: \"none\" }}>\n          <SidenavItem name={name} active={route === pathname} nested />\n        </NavLink>\n      )\n    );\n\n    return template;\n  };\n  // Render the all the collpases from the routes.js\n  const renderCollapse = (collapses) =>\n    collapses.map(({ name, collapse, route, href, key, type }) => {\n      let returnValue;\n      if (collapse) {\n        returnValue = (\n          <SidenavItem\n            key={key}\n            color={color}\n            name={name}\n            active={key === itemParentName ? \"isParent\" : false}\n            open={openNestedCollapse === key}\n            onClick={({ currentTarget }) =>\n              openNestedCollapse === key && currentTarget.classList.contains(\"MuiListItem-root\")\n                ? setOpenNestedCollapse(false)\n                : setOpenNestedCollapse(key)\n            }\n          >\n            {renderNestedCollapse(collapse)}\n          </SidenavItem>\n        );\n      } else {\n        if (name !== \"Logout\") {\n          returnValue = href ? (\n            type ? (\n              <Can I=\"edit\" this={type}>\n                <Link\n                  href={href}\n                  key={key}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  sx={{ textDecoration: \"none\" }}\n                >\n                  <SidenavItem color={color} name={name} active={key === itemName} />\n                </Link>\n              </Can>\n            ) : (\n              <Link\n                href={href}\n                key={key}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                sx={{ textDecoration: \"none\" }}\n              >\n                <SidenavItem color={color} name={name} active={key === itemName} />\n              </Link>\n            )\n          ) : type ? (\n            <Can I=\"edit\" a={type}>\n              <NavLink to={route} key={key} sx={{ textDecoration: \"none\" }}>\n                <SidenavItem color={color} name={name} active={key === itemName} />\n              </NavLink>\n            </Can>\n          ) : (\n            <NavLink to={route} key={key} sx={{ textDecoration: \"none\" }}>\n              <SidenavItem color={color} name={name} active={key === itemName} />\n            </NavLink>\n          );\n        } else {\n          returnValue = (\n            <MDBox>\n              <MDButton\n                fullWidth\n                variant=\"gradient\"\n                color={color}\n                type=\"button\"\n                onClick={handleLogOut}\n              >\n                Log Out\n              </MDButton>\n            </MDBox>\n          );\n        }\n      }\n      return <SidenavList key={key}>{returnValue}</SidenavList>;\n    });\n\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\n  const renderRoutes = routes.map(\n    ({ type, name, icon, title, collapse, noCollapse, key, href, route }) => {\n      let returnValue;\n\n      if (type === \"collapse\") {\n        if (href) {\n          returnValue = (\n            <Link\n              href={href}\n              key={key}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              sx={{ textDecoration: \"none\" }}\n            >\n              <SidenavCollapse\n                name={name}\n                icon={icon}\n                active={key === collapseName}\n                noCollapse={noCollapse}\n              />\n            </Link>\n          );\n        } else if (noCollapse && route) {\n          returnValue = (\n            <NavLink to={route} key={key}>\n              <SidenavCollapse\n                name={name}\n                icon={icon}\n                noCollapse={noCollapse}\n                active={key === collapseName}\n              >\n                {collapse ? renderCollapse(collapse) : null}\n              </SidenavCollapse>\n            </NavLink>\n          );\n        } else {\n          returnValue = (\n            <SidenavCollapse\n              key={key}\n              name={name}\n              icon={icon}\n              active={key === collapseName}\n              open={openCollapse === key}\n              onClick={() => (openCollapse === key ? setOpenCollapse(false) : setOpenCollapse(key))}\n            >\n              {collapse ? renderCollapse(collapse) : null}\n            </SidenavCollapse>\n          );\n        }\n      } else if (type === \"title\") {\n        returnValue = (\n          <MDTypography\n            key={key}\n            color={textColor}\n            display=\"block\"\n            variant=\"caption\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n            pl={3}\n            mt={2}\n            mb={1}\n            ml={1}\n          >\n            {title}\n          </MDTypography>\n        );\n      } else if (type === \"divider\") {\n        returnValue = (\n          <Divider\n            key={key}\n            light={\n              (!darkMode && !whiteSidenav && !transparentSidenav) ||\n              (darkMode && !transparentSidenav && whiteSidenav)\n            }\n          />\n        );\n      }\n\n      return returnValue;\n    }\n  );\n\n  return (\n    <SidenavRoot\n      {...rest}\n      variant=\"permanent\"\n      ownerState={{ transparentSidenav, whiteSidenav, miniSidenav, darkMode }}\n    >\n      <MDBox pt={3} pb={1} px={4} textAlign=\"center\">\n        <MDBox\n          display={{ xs: \"block\", xl: \"none\" }}\n          position=\"absolute\"\n          top={0}\n          right={0}\n          p={1.625}\n          onClick={closeSidenav}\n          sx={{ cursor: \"pointer\" }}\n        >\n          <MDTypography variant=\"h6\" color=\"secondary\">\n            <Icon sx={{ fontWeight: \"bold\" }}>close</Icon>\n          </MDTypography>\n        </MDBox>\n        <MDBox component={NavLink} to=\"/\" display=\"flex\" alignItems=\"center\">\n          {brand && <MDBox component=\"img\" src={brand} alt=\"Brand\" width=\"2rem\" />}\n          <MDBox\n            width={!brandName && \"100%\"}\n            sx={(theme) => sidenavLogoLabel(theme, { miniSidenav })}\n          >\n            <MDTypography component=\"h6\" variant=\"button\" fontWeight=\"medium\" color={textColor}>\n              {brandName}\n            </MDTypography>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n      <Divider\n        light={\n          (!darkMode && !whiteSidenav && !transparentSidenav) ||\n          (darkMode && !transparentSidenav && whiteSidenav)\n        }\n      />\n      <List>{renderRoutes}</List>\n    </SidenavRoot>\n  );\n}\n\n// Setting default values for the props of Sidenav\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\",\n};\n\n// Typechecking props for the Sidenav\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Sidenav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}