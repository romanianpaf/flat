{"ast":null,"code":"import HttpService from \"./http.service\";\nclass CrudService {\n  constructor() {\n    // users requests\n    this.imageUpload = async (formData, id) => {\n      const imageUpdate = `uploads/users/${id}/profile-image`;\n      return await HttpService.post(imageUpdate, formData);\n    };\n    this.getUsers = async () => {\n      const usersEndpoint = \"users?include=roles\";\n      return await HttpService.get(usersEndpoint);\n    };\n    this.deleteUser = async id => {\n      const endpoint = `users/${id}`;\n      return await HttpService.delete(endpoint);\n    };\n    this.createUser = async payload => {\n      const endpoint = \"users\";\n      return await HttpService.post(endpoint, payload);\n    };\n    this.getUser = async id => {\n      const endpoint = `users/${id}?include=roles`;\n      return await HttpService.get(endpoint);\n    };\n    this.getUserWithPermissions = async id => {\n      const endpoint = `users/${id}?include=roles,roles.permissions`;\n      return await HttpService.get(endpoint);\n    };\n    this.updateUser = async (payload, id) => {\n      const endpoint = `users/${id}`;\n      return await HttpService.patch(endpoint, payload);\n    };\n    // roles requests\n    this.getRoles = async () => {\n      const rolesEndpoint = \"roles\";\n      return await HttpService.get(rolesEndpoint);\n    };\n    this.deleteRole = async id => {\n      const endpoint = `roles/${id}`;\n      return await HttpService.delete(endpoint);\n    };\n    this.createRole = async payload => {\n      const endpoint = \"roles\";\n      return await HttpService.post(endpoint, payload);\n    };\n    this.updateRole = async (payload, id) => {\n      const endpoint = `roles/${id}`;\n      return await HttpService.patch(endpoint, payload);\n    };\n    this.getRole = async id => {\n      const endpoint = `roles/${id}`;\n      return await HttpService.get(endpoint);\n    };\n    // categories requests\n    this.getCategories = async () => {\n      const categoriesEndpoint = \"categories\";\n      return await HttpService.get(categoriesEndpoint);\n    };\n    this.deleteCategory = async id => {\n      const endpoint = `categories/${id}`;\n      return await HttpService.delete(endpoint);\n    };\n    this.createCategory = async payload => {\n      const endpoint = \"categories\";\n      return await HttpService.post(endpoint, payload);\n    };\n    this.getCategory = async id => {\n      const categoriesEndpoint = `categories/${id}`;\n      return await HttpService.get(categoriesEndpoint);\n    };\n    this.updateCategory = async (payload, id) => {\n      const categoriesEndpoint = `categories/${id}`;\n      return await HttpService.patch(categoriesEndpoint, payload);\n    };\n    // tag requests\n    this.getTags = async () => {\n      const tagsEndpoint = \"tags\";\n      return await HttpService.get(tagsEndpoint);\n    };\n    this.deleteTag = async id => {\n      const endpoint = `tags/${id}`;\n      return await HttpService.delete(endpoint);\n    };\n    this.createTag = async payload => {\n      const endpoint = \"tags\";\n      return await HttpService.post(endpoint, payload);\n    };\n    this.getTag = async id => {\n      const endpoint = `tags/${id}`;\n      return await HttpService.get(endpoint);\n    };\n    this.updateTag = async (payload, id) => {\n      const endpoint = `tags/${id}`;\n      return await HttpService.patch(endpoint, payload);\n    };\n    // item requests\n    this.getItems = async () => {\n      const tagsEndpoint = \"items\";\n      return await HttpService.get(tagsEndpoint);\n    };\n    this.deleteItem = async id => {\n      const endpoint = `items/${id}`;\n      return await HttpService.delete(endpoint);\n    };\n    this.getCategoryOfItem = async id => {\n      const endpoint = `items/${id}/category`;\n      return await HttpService.get(endpoint);\n    };\n    this.getTagsOfItem = async id => {\n      const endpoint = `items/${id}/tags`;\n      return await HttpService.get(endpoint);\n    };\n    this.createItem = async payload => {\n      const endpoint = \"items\";\n      return await HttpService.post(endpoint, payload);\n    };\n    this.itemImageUpload = async (formData, id) => {\n      const imageUpdate = `uploads/items/${id}/image`;\n      return await HttpService.post(imageUpdate, formData);\n    };\n    this.getItem = async id => {\n      const endpoint = `items/${id}?include=category,tags`;\n      return await HttpService.get(endpoint);\n    };\n    this.updateItem = async (payload, id) => {\n      const endpoint = `items/${id}`;\n      return await HttpService.patch(endpoint, payload);\n    };\n  }\n}\nexport default new CrudService();","map":{"version":3,"names":["HttpService","CrudService","constructor","imageUpload","formData","id","imageUpdate","post","getUsers","usersEndpoint","get","deleteUser","endpoint","delete","createUser","payload","getUser","getUserWithPermissions","updateUser","patch","getRoles","rolesEndpoint","deleteRole","createRole","updateRole","getRole","getCategories","categoriesEndpoint","deleteCategory","createCategory","getCategory","updateCategory","getTags","tagsEndpoint","deleteTag","createTag","getTag","updateTag","getItems","deleteItem","getCategoryOfItem","getTagsOfItem","createItem","itemImageUpload","getItem","updateItem"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/services/cruds-service.js"],"sourcesContent":["import HttpService from \"./http.service\";\n\nclass CrudService {\n  // users requests\n  imageUpload = async (formData, id) => {\n    const imageUpdate = `uploads/users/${id}/profile-image`;\n    return await HttpService.post(imageUpdate, formData);\n  };\n\n  getUsers = async () => {\n    const usersEndpoint = \"users?include=roles\";\n    return await HttpService.get(usersEndpoint);\n  };\n\n  deleteUser = async (id) => {\n    const endpoint = `users/${id}`;\n    return await HttpService.delete(endpoint);\n  };\n\n  createUser = async (payload) => {\n    const endpoint = \"users\";\n    return await HttpService.post(endpoint, payload);\n  };\n\n  getUser = async (id) => {\n    const endpoint = `users/${id}?include=roles`;\n    return await HttpService.get(endpoint);\n  };\n\n  getUserWithPermissions = async (id) => {\n    const endpoint = `users/${id}?include=roles,roles.permissions`;\n    return await HttpService.get(endpoint);\n  };\n\n  updateUser = async (payload, id) => {\n    const endpoint = `users/${id}`;\n    return await HttpService.patch(endpoint, payload);\n  };\n\n  // roles requests\n  getRoles = async () => {\n    const rolesEndpoint = \"roles\";\n    return await HttpService.get(rolesEndpoint);\n  };\n\n  deleteRole = async (id) => {\n    const endpoint = `roles/${id}`;\n    return await HttpService.delete(endpoint);\n  };\n\n  createRole = async (payload) => {\n    const endpoint = \"roles\";\n    return await HttpService.post(endpoint, payload);\n  };\n\n  updateRole = async (payload, id) => {\n    const endpoint = `roles/${id}`;\n    return await HttpService.patch(endpoint, payload);\n  };\n\n  getRole = async (id) => {\n    const endpoint = `roles/${id}`;\n    return await HttpService.get(endpoint);\n  };\n\n  // categories requests\n  getCategories = async () => {\n    const categoriesEndpoint = \"categories\";\n    return await HttpService.get(categoriesEndpoint);\n  };\n\n  deleteCategory = async (id) => {\n    const endpoint = `categories/${id}`;\n    return await HttpService.delete(endpoint);\n  };\n\n  createCategory = async (payload) => {\n    const endpoint = \"categories\";\n    return await HttpService.post(endpoint, payload);\n  };\n\n  getCategory = async (id) => {\n    const categoriesEndpoint = `categories/${id}`;\n    return await HttpService.get(categoriesEndpoint);\n  };\n\n  updateCategory = async (payload, id) => {\n    const categoriesEndpoint = `categories/${id}`;\n    return await HttpService.patch(categoriesEndpoint, payload);\n  };\n\n  // tag requests\n  getTags = async () => {\n    const tagsEndpoint = \"tags\";\n    return await HttpService.get(tagsEndpoint);\n  };\n\n  deleteTag = async (id) => {\n    const endpoint = `tags/${id}`;\n    return await HttpService.delete(endpoint);\n  };\n\n  createTag = async (payload) => {\n    const endpoint = \"tags\";\n    return await HttpService.post(endpoint, payload);\n  };\n\n  getTag = async (id) => {\n    const endpoint = `tags/${id}`;\n    return await HttpService.get(endpoint);\n  };\n\n  updateTag = async (payload, id) => {\n    const endpoint = `tags/${id}`;\n    return await HttpService.patch(endpoint, payload);\n  };\n\n  // item requests\n  getItems = async () => {\n    const tagsEndpoint = \"items\";\n    return await HttpService.get(tagsEndpoint);\n  };\n\n  deleteItem = async (id) => {\n    const endpoint = `items/${id}`;\n    return await HttpService.delete(endpoint);\n  };\n\n  getCategoryOfItem = async (id) => {\n    const endpoint = `items/${id}/category`;\n    return await HttpService.get(endpoint);\n  };\n\n  getTagsOfItem = async (id) => {\n    const endpoint = `items/${id}/tags`;\n    return await HttpService.get(endpoint);\n  };\n\n  createItem = async (payload) => {\n    const endpoint = \"items\";\n    return await HttpService.post(endpoint, payload);\n  };\n\n  itemImageUpload = async (formData, id) => {\n    const imageUpdate = `uploads/items/${id}/image`;\n    return await HttpService.post(imageUpdate, formData);\n  };\n\n  getItem = async (id) => {\n    const endpoint = `items/${id}?include=category,tags`;\n    return await HttpService.get(endpoint);\n  };\n\n  updateItem = async (payload, id) => {\n    const endpoint = `items/${id}`;\n    return await HttpService.patch(endpoint, payload);\n  };\n}\n\nexport default new CrudService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}