{"ast":null,"code":"import HttpService from \"./http.service\";\nclass AuthService {\n  constructor() {\n    this.login = async payload => {\n      const loginEndpoint = \"login\";\n      return await HttpService.post(loginEndpoint, payload);\n    };\n    this.register = async credentials => {\n      const registerEndpoint = \"register\";\n      return await HttpService.post(registerEndpoint, credentials);\n    };\n    this.logout = async () => {\n      const logoutEndpoint = \"logout\";\n      return await HttpService.post(logoutEndpoint);\n    };\n    this.forgotPassword = async payload => {\n      const forgotPassword = \"password-forgot\";\n      return await HttpService.post(forgotPassword, payload);\n    };\n    this.resetPassword = async credentials => {\n      const resetPassword = \"password-reset\";\n      return await HttpService.post(resetPassword, credentials);\n    };\n    this.getProfile = async () => {\n      const getProfile = \"me\";\n      return await HttpService.get(getProfile);\n    };\n    this.updateProfile = async newInfo => {\n      const updateProfile = \"me\";\n      return await HttpService.patch(updateProfile, newInfo);\n    };\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["HttpService","AuthService","constructor","login","payload","loginEndpoint","post","register","credentials","registerEndpoint","logout","logoutEndpoint","forgotPassword","resetPassword","getProfile","get","updateProfile","newInfo","patch"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/services/auth-service.js"],"sourcesContent":["import HttpService from \"./http.service\";\n\nclass AuthService {\n  login = async (payload) => {\n    const loginEndpoint = \"login\";\n    return await HttpService.post(loginEndpoint, payload);\n  };\n\n  register = async (credentials) => {\n    const registerEndpoint = \"register\";\n    return await HttpService.post(registerEndpoint, credentials);\n  };\n\n  logout = async () => {\n    const logoutEndpoint = \"logout\";\n    return await HttpService.post(logoutEndpoint);\n  };\n\n  forgotPassword = async (payload) => {\n    const forgotPassword = \"password-forgot\";\n    return await HttpService.post(forgotPassword, payload);\n  };\n\n  resetPassword = async (credentials) => {\n    const resetPassword = \"password-reset\";\n    return await HttpService.post(resetPassword, credentials);\n  };\n\n  getProfile = async () => {\n    const getProfile = \"me\";\n    return await HttpService.get(getProfile);\n  };\n\n  updateProfile = async (newInfo) => {\n    const updateProfile = \"me\";\n    return await HttpService.patch(updateProfile, newInfo);\n  };\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAExC,MAAMC,WAAW,CAAC;EAAAC,YAAA;IAAA,KAChBC,KAAK,GAAG,MAAOC,OAAO,IAAK;MACzB,MAAMC,aAAa,GAAG,OAAO;MAC7B,OAAO,MAAML,WAAW,CAACM,IAAI,CAACD,aAAa,EAAED,OAAO,CAAC;IACvD,CAAC;IAAA,KAEDG,QAAQ,GAAG,MAAOC,WAAW,IAAK;MAChC,MAAMC,gBAAgB,GAAG,UAAU;MACnC,OAAO,MAAMT,WAAW,CAACM,IAAI,CAACG,gBAAgB,EAAED,WAAW,CAAC;IAC9D,CAAC;IAAA,KAEDE,MAAM,GAAG,YAAY;MACnB,MAAMC,cAAc,GAAG,QAAQ;MAC/B,OAAO,MAAMX,WAAW,CAACM,IAAI,CAACK,cAAc,CAAC;IAC/C,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAOR,OAAO,IAAK;MAClC,MAAMQ,cAAc,GAAG,iBAAiB;MACxC,OAAO,MAAMZ,WAAW,CAACM,IAAI,CAACM,cAAc,EAAER,OAAO,CAAC;IACxD,CAAC;IAAA,KAEDS,aAAa,GAAG,MAAOL,WAAW,IAAK;MACrC,MAAMK,aAAa,GAAG,gBAAgB;MACtC,OAAO,MAAMb,WAAW,CAACM,IAAI,CAACO,aAAa,EAAEL,WAAW,CAAC;IAC3D,CAAC;IAAA,KAEDM,UAAU,GAAG,YAAY;MACvB,MAAMA,UAAU,GAAG,IAAI;MACvB,OAAO,MAAMd,WAAW,CAACe,GAAG,CAACD,UAAU,CAAC;IAC1C,CAAC;IAAA,KAEDE,aAAa,GAAG,MAAOC,OAAO,IAAK;MACjC,MAAMD,aAAa,GAAG,IAAI;MAC1B,OAAO,MAAMhB,WAAW,CAACkB,KAAK,CAACF,aAAa,EAAEC,OAAO,CAAC;IACxD,CAAC;EAAA;AACH;AAEA,eAAe,IAAIhB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}