{"ast":null,"code":"import{useEffect,useState}from\"react\";// react-router-dom components\nimport{Link}from\"react-router-dom\";// @mui material components\nimport Card from\"@mui/material/Card\";// Material Dashboard 2 React components\nimport MDBox from\"components/MDBox\";import MDTypography from\"components/MDTypography\";import MDInput from\"components/MDInput\";import MDButton from\"components/MDButton\";import MDAlert from\"components/MDAlert\";// Authentication layout components\nimport CoverLayout from\"layouts/authentication/components/CoverLayout\";// Images\nimport bgImage from\"assets/images/bg-sign-up-cover.jpeg\";import AuthService from\"services/auth-service\";// for the reset I should take from the url the token sent and the email\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordReset=()=>{const[token,setToken]=useState(null);const[email,setEmail]=useState(null);const[notification,setNotification]=useState(false);const[inputs,setInputs]=useState({password:\"\",password_confirmation:\"\"});const[errors,setErrors]=useState({passwordError:false,confirmationError:false,error:false,textError:\"\"});const changeHandler=e=>{setInputs({...inputs,[e.target.name]:e.target.value});};useEffect(()=>{// get the token and email sent in the url\nconst queryParams=new URLSearchParams(window.location.search);setToken(queryParams.get(\"token\"));setEmail(queryParams.get(\"email\"));},[]);const submitHandler=async e=>{e.preventDefault();if(inputs.password.trim().length<6){setErrors({...errors,passwordError:true});return;}if(inputs.password_confirmation.trim()!==inputs.password.trim()){setErrors({...errors,confirmationError:true});return;}const formData={password:inputs.password,password_confirmation:inputs.password_confirmation,email,token};const myData={data:{type:\"password-reset\",attributes:{...formData}}};try{const res=await AuthService.resetPassword(myData);setInputs({password:\"\",password_confirmation:\"\"});setErrors({passwordError:false,confirmationError:false,error:false,textError:\"\"});if(errors.passwordError===false&&errors.confirmationError===false){setNotification(true);}}catch(err){console.error(err);setErrors({...errors,error:true,textError:err.errors.password[0]});return null;}};return/*#__PURE__*/_jsxs(CoverLayout,{image:bgImage,children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(MDBox,{variant:\"gradient\",bgColor:\"info\",borderRadius:\"lg\",coloredShadow:\"success\",mx:2,mt:-3,p:3,mb:1,textAlign:\"center\",children:[/*#__PURE__*/_jsx(MDTypography,{variant:\"h4\",fontWeight:\"medium\",color:\"white\",mt:1,children:\"Join us today\"}),/*#__PURE__*/_jsx(MDTypography,{display:\"block\",variant:\"button\",color:\"white\",my:1,children:\"Enter your new password and its confimrmation for update\"})]}),/*#__PURE__*/_jsx(MDBox,{pt:4,pb:3,px:3,children:/*#__PURE__*/_jsxs(MDBox,{component:\"form\",role:\"form\",method:\"POST\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(MDBox,{mb:2,children:/*#__PURE__*/_jsx(MDInput,{type:\"password\",label:\"Password\",variant:\"standard\",fullWidth:true,name:\"password\",value:inputs.password,onChange:changeHandler,error:errors.passwordError})}),/*#__PURE__*/_jsx(MDBox,{mb:2,children:/*#__PURE__*/_jsx(MDInput,{type:\"password\",label:\"Password Confirmation\",variant:\"standard\",fullWidth:true,name:\"password_confirmation\",value:inputs.password_confirmation,onChange:changeHandler,error:errors.confirmationError})}),errors.error&&/*#__PURE__*/_jsx(MDTypography,{variant:\"caption\",color:\"error\",fontWeight:\"light\",children:errors.textError}),/*#__PURE__*/_jsx(MDBox,{mt:4,mb:1,children:/*#__PURE__*/_jsx(MDButton,{variant:\"gradient\",color:\"info\",fullWidth:true,type:\"submit\",children:\"change\"})}),/*#__PURE__*/_jsx(MDBox,{mt:3,mb:1,textAlign:\"center\",children:/*#__PURE__*/_jsxs(MDTypography,{variant:\"button\",color:\"text\",children:[\"Already have an account?\",\" \",/*#__PURE__*/_jsx(MDTypography,{component:Link,to:\"/auth/login\",variant:\"button\",color:\"info\",fontWeight:\"medium\",textGradient:true,children:\"Sign In\"})]})})]})})]}),notification&&/*#__PURE__*/_jsx(MDAlert,{color:\"info\",mt:\"20px\",dismissible:true,children:/*#__PURE__*/_jsxs(MDTypography,{variant:\"body2\",color:\"white\",children:[\"Your password change was successful. Go back to\",/*#__PURE__*/_jsx(MDTypography,{component:Link,to:\"/auth/login\",variant:\"body2\",fontWeight:\"medium\",color:\"white\",children:\"\\xA0login\\xA0\"}),\"to authenticate.\"]})})]});};export default PasswordReset;","map":{"version":3,"names":["useEffect","useState","Link","Card","MDBox","MDTypography","MDInput","MDButton","MDAlert","CoverLayout","bgImage","AuthService","jsx","_jsx","jsxs","_jsxs","PasswordReset","token","setToken","email","setEmail","notification","setNotification","inputs","setInputs","password","password_confirmation","errors","setErrors","passwordError","confirmationError","error","textError","changeHandler","e","target","name","value","queryParams","URLSearchParams","window","location","search","get","submitHandler","preventDefault","trim","length","formData","myData","data","type","attributes","res","resetPassword","err","console","image","children","variant","bgColor","borderRadius","coloredShadow","mx","mt","p","mb","textAlign","fontWeight","color","display","my","pt","pb","px","component","role","method","onSubmit","label","fullWidth","onChange","to","textGradient","dismissible"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/auth/reset-password/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDButton from \"components/MDButton\";\nimport MDAlert from \"components/MDAlert\";\n\n// Authentication layout components\nimport CoverLayout from \"layouts/authentication/components/CoverLayout\";\n\n// Images\nimport bgImage from \"assets/images/bg-sign-up-cover.jpeg\";\n\nimport AuthService from \"services/auth-service\";\n\n// for the reset I should take from the url the token sent and the email\nconst PasswordReset = () => {\n  const [token, setToken] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [notification, setNotification] = useState(false);\n\n  const [inputs, setInputs] = useState({\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  const [errors, setErrors] = useState({\n    passwordError: false,\n    confirmationError: false,\n    error: false,\n    textError: \"\",\n  });\n\n  const changeHandler = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    // get the token and email sent in the url\n    const queryParams = new URLSearchParams(window.location.search);\n    setToken(queryParams.get(\"token\"));\n    setEmail(queryParams.get(\"email\"));\n  }, []);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    if (inputs.password.trim().length < 6) {\n      setErrors({ ...errors, passwordError: true });\n      return;\n    }\n\n    if (inputs.password_confirmation.trim() !== inputs.password.trim()) {\n      setErrors({ ...errors, confirmationError: true });\n      return;\n    }\n\n    const formData = {\n      password: inputs.password,\n      password_confirmation: inputs.password_confirmation,\n      email,\n      token,\n    };\n\n    const myData = {\n      data: {\n        type: \"password-reset\",\n        attributes: { ...formData },\n      },\n    };\n\n    try {\n      const res = await AuthService.resetPassword(myData);\n      setInputs({\n        password: \"\",\n        password_confirmation: \"\",\n      });\n\n      setErrors({\n        passwordError: false,\n        confirmationError: false,\n        error: false,\n        textError: \"\",\n      });\n\n      if (errors.passwordError === false && errors.confirmationError === false) {\n        setNotification(true);\n      }\n    } catch (err) {\n      console.error(err);\n      setErrors({ ...errors, error: true, textError: err.errors.password[0] });\n      return null;\n    }\n  };\n\n  return (\n    <CoverLayout image={bgImage}>\n      <Card>\n        <MDBox\n          variant=\"gradient\"\n          bgColor=\"info\"\n          borderRadius=\"lg\"\n          coloredShadow=\"success\"\n          mx={2}\n          mt={-3}\n          p={3}\n          mb={1}\n          textAlign=\"center\"\n        >\n          <MDTypography variant=\"h4\" fontWeight=\"medium\" color=\"white\" mt={1}>\n            Join us today\n          </MDTypography>\n          <MDTypography display=\"block\" variant=\"button\" color=\"white\" my={1}>\n            Enter your new password and its confimrmation for update\n          </MDTypography>\n        </MDBox>\n        <MDBox pt={4} pb={3} px={3}>\n          <MDBox component=\"form\" role=\"form\" method=\"POST\" onSubmit={submitHandler}>\n            <MDBox mb={2}>\n              <MDInput\n                type=\"password\"\n                label=\"Password\"\n                variant=\"standard\"\n                fullWidth\n                name=\"password\"\n                value={inputs.password}\n                onChange={changeHandler}\n                error={errors.passwordError}\n              />\n            </MDBox>\n            <MDBox mb={2}>\n              <MDInput\n                type=\"password\"\n                label=\"Password Confirmation\"\n                variant=\"standard\"\n                fullWidth\n                name=\"password_confirmation\"\n                value={inputs.password_confirmation}\n                onChange={changeHandler}\n                error={errors.confirmationError}\n              />\n            </MDBox>\n\n            {errors.error && (\n              <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\">\n                {errors.textError}\n              </MDTypography>\n            )}\n\n            <MDBox mt={4} mb={1}>\n              <MDButton variant=\"gradient\" color=\"info\" fullWidth type=\"submit\">\n                change\n              </MDButton>\n            </MDBox>\n            <MDBox mt={3} mb={1} textAlign=\"center\">\n              <MDTypography variant=\"button\" color=\"text\">\n                Already have an account?{\" \"}\n                <MDTypography\n                  component={Link}\n                  to=\"/auth/login\"\n                  variant=\"button\"\n                  color=\"info\"\n                  fontWeight=\"medium\"\n                  textGradient\n                >\n                  Sign In\n                </MDTypography>\n              </MDTypography>\n            </MDBox>\n          </MDBox>\n        </MDBox>\n      </Card>\n      {notification && (\n        <MDAlert color=\"info\" mt=\"20px\" dismissible>\n          <MDTypography variant=\"body2\" color=\"white\">\n            Your password change was successful. Go back to\n            <MDTypography\n              component={Link}\n              to=\"/auth/login\"\n              variant=\"body2\"\n              fontWeight=\"medium\"\n              color=\"white\"\n            >\n              &nbsp;login&nbsp;\n            </MDTypography>\n            to authenticate.\n          </MDTypography>\n        </MDAlert>\n      )}\n    </CoverLayout>\n  );\n};\n\nexport default PasswordReset;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}