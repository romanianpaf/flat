{"ast":null,"code":"import CrudService from \"services/cruds-service\";\nexport const getPermissions = async id => {\n  try {\n    const res = await CrudService.getUserWithPermissions(id);\n    const permissions = res.included;\n    let jsonPermissions = [];\n    permissions.map(permission => {\n      if (permission.type == \"permissions\") {\n        const namePermission = permission.attributes.name.split(\" \");\n        if (namePermission.length === 2) {\n          const action = namePermission[0];\n          const subject = namePermission[1];\n          if ((action === \"delete\" || action === \"edit\") && subject === \"users\") {\n            jsonPermissions = [...jsonPermissions, {\n              action,\n              subject,\n              conditions: {\n                id: {\n                  $ne: id\n                }\n              }\n            }];\n          } else {\n            jsonPermissions = [...jsonPermissions, {\n              action,\n              subject\n            }];\n          }\n        }\n      }\n    });\n    return jsonPermissions;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};","map":{"version":3,"names":["CrudService","getPermissions","id","res","getUserWithPermissions","permissions","included","jsonPermissions","map","permission","type","namePermission","attributes","name","split","length","action","subject","conditions","$ne","err","console","error"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/config/Permissions/index.js"],"sourcesContent":["import CrudService from \"services/cruds-service\";\n\nexport const getPermissions = async (id) => {\n  try {\n    const res = await CrudService.getUserWithPermissions(id);\n    const permissions = res.included;\n    let jsonPermissions = [];\n    permissions.map((permission) => {\n      if (permission.type == \"permissions\") {\n        const namePermission = permission.attributes.name.split(\" \");\n        if (namePermission.length === 2) {\n          const action = namePermission[0];\n          const subject = namePermission[1];\n          if ((action === \"delete\" || action === \"edit\") && subject === \"users\") {\n            jsonPermissions = [\n              ...jsonPermissions,\n              { action, subject, conditions: { id: { $ne: id } } },\n            ];\n          } else {\n            jsonPermissions = [...jsonPermissions, { action, subject }];\n          }\n        }\n      }\n    });\n    return jsonPermissions;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,WAAW,CAACI,sBAAsB,CAACF,EAAE,CAAC;IACxD,MAAMG,WAAW,GAAGF,GAAG,CAACG,QAAQ;IAChC,IAAIC,eAAe,GAAG,EAAE;IACxBF,WAAW,CAACG,GAAG,CAAEC,UAAU,IAAK;MAC9B,IAAIA,UAAU,CAACC,IAAI,IAAI,aAAa,EAAE;QACpC,MAAMC,cAAc,GAAGF,UAAU,CAACG,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;QAC5D,IAAIH,cAAc,CAACI,MAAM,KAAK,CAAC,EAAE;UAC/B,MAAMC,MAAM,GAAGL,cAAc,CAAC,CAAC,CAAC;UAChC,MAAMM,OAAO,GAAGN,cAAc,CAAC,CAAC,CAAC;UACjC,IAAI,CAACK,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,MAAM,KAAKC,OAAO,KAAK,OAAO,EAAE;YACrEV,eAAe,GAAG,CAChB,GAAGA,eAAe,EAClB;cAAES,MAAM;cAAEC,OAAO;cAAEC,UAAU,EAAE;gBAAEhB,EAAE,EAAE;kBAAEiB,GAAG,EAAEjB;gBAAG;cAAE;YAAE,CAAC,CACrD;UACH,CAAC,MAAM;YACLK,eAAe,GAAG,CAAC,GAAGA,eAAe,EAAE;cAAES,MAAM;cAAEC;YAAQ,CAAC,CAAC;UAC7D;QACF;MACF;IACF,CAAC,CAAC;IACF,OAAOV,eAAe;EACxB,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}