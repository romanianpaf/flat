{"ast":null,"code":"import HttpService from\"./http.service\";class AuthService{constructor(){this.login=async payload=>{const loginEndpoint=\"login\";return await HttpService.post(loginEndpoint,payload);};this.register=async credentials=>{const registerEndpoint=\"register\";return await HttpService.post(registerEndpoint,credentials);};this.logout=async()=>{const logoutEndpoint=\"logout\";return await HttpService.post(logoutEndpoint);};this.forgotPassword=async payload=>{const forgotPassword=\"password-forgot\";return await HttpService.post(forgotPassword,payload);};this.resetPassword=async credentials=>{const resetPassword=\"password-reset\";return await HttpService.post(resetPassword,credentials);};this.getProfile=async()=>{const getProfile=\"me\";return await HttpService.get(getProfile);};this.updateProfile=async newInfo=>{const updateProfile=\"me\";return await HttpService.patch(updateProfile,newInfo);};}}export default new AuthService();","map":{"version":3,"names":["HttpService","AuthService","constructor","login","payload","loginEndpoint","post","register","credentials","registerEndpoint","logout","logoutEndpoint","forgotPassword","resetPassword","getProfile","get","updateProfile","newInfo","patch"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/services/auth-service.js"],"sourcesContent":["import HttpService from \"./http.service\";\n\nclass AuthService {\n  login = async (payload) => {\n    const loginEndpoint = \"login\";\n    return await HttpService.post(loginEndpoint, payload);\n  };\n\n  register = async (credentials) => {\n    const registerEndpoint = \"register\";\n    return await HttpService.post(registerEndpoint, credentials);\n  };\n\n  logout = async () => {\n    const logoutEndpoint = \"logout\";\n    return await HttpService.post(logoutEndpoint);\n  };\n\n  forgotPassword = async (payload) => {\n    const forgotPassword = \"password-forgot\";\n    return await HttpService.post(forgotPassword, payload);\n  };\n\n  resetPassword = async (credentials) => {\n    const resetPassword = \"password-reset\";\n    return await HttpService.post(resetPassword, credentials);\n  };\n\n  getProfile = async () => {\n    const getProfile = \"me\";\n    return await HttpService.get(getProfile);\n  };\n\n  updateProfile = async (newInfo) => {\n    const updateProfile = \"me\";\n    return await HttpService.patch(updateProfile, newInfo);\n  };\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,gBAAgB,CAExC,KAAM,CAAAC,WAAY,CAAAC,YAAA,OAChBC,KAAK,CAAG,KAAO,CAAAC,OAAO,EAAK,CACzB,KAAM,CAAAC,aAAa,CAAG,OAAO,CAC7B,MAAO,MAAM,CAAAL,WAAW,CAACM,IAAI,CAACD,aAAa,CAAED,OAAO,CAAC,CACvD,CAAC,MAEDG,QAAQ,CAAG,KAAO,CAAAC,WAAW,EAAK,CAChC,KAAM,CAAAC,gBAAgB,CAAG,UAAU,CACnC,MAAO,MAAM,CAAAT,WAAW,CAACM,IAAI,CAACG,gBAAgB,CAAED,WAAW,CAAC,CAC9D,CAAC,MAEDE,MAAM,CAAG,SAAY,CACnB,KAAM,CAAAC,cAAc,CAAG,QAAQ,CAC/B,MAAO,MAAM,CAAAX,WAAW,CAACM,IAAI,CAACK,cAAc,CAAC,CAC/C,CAAC,MAEDC,cAAc,CAAG,KAAO,CAAAR,OAAO,EAAK,CAClC,KAAM,CAAAQ,cAAc,CAAG,iBAAiB,CACxC,MAAO,MAAM,CAAAZ,WAAW,CAACM,IAAI,CAACM,cAAc,CAAER,OAAO,CAAC,CACxD,CAAC,MAEDS,aAAa,CAAG,KAAO,CAAAL,WAAW,EAAK,CACrC,KAAM,CAAAK,aAAa,CAAG,gBAAgB,CACtC,MAAO,MAAM,CAAAb,WAAW,CAACM,IAAI,CAACO,aAAa,CAAEL,WAAW,CAAC,CAC3D,CAAC,MAEDM,UAAU,CAAG,SAAY,CACvB,KAAM,CAAAA,UAAU,CAAG,IAAI,CACvB,MAAO,MAAM,CAAAd,WAAW,CAACe,GAAG,CAACD,UAAU,CAAC,CAC1C,CAAC,MAEDE,aAAa,CAAG,KAAO,CAAAC,OAAO,EAAK,CACjC,KAAM,CAAAD,aAAa,CAAG,IAAI,CAC1B,MAAO,MAAM,CAAAhB,WAAW,CAACkB,KAAK,CAACF,aAAa,CAAEC,OAAO,CAAC,CACxD,CAAC,EACH,CAEA,cAAe,IAAI,CAAAhB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}