{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Charts/LineCharts/DefaultLineChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// DefaultLineChart configurations\nimport configs from \"examples/Charts/LineCharts/DefaultLineChart/configs\";\n\n// Material Dashboard 2 PRO React base styles\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultLineChart({\n  icon,\n  title,\n  description,\n  height,\n  chart\n}) {\n  _s();\n  const chartDatasets = chart.datasets ? chart.datasets.map(dataset => ({\n    ...dataset,\n    tension: 0,\n    pointRadius: 3,\n    borderWidth: 4,\n    backgroundColor: \"transparent\",\n    fill: true,\n    pointBackgroundColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n    borderColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n    maxBarThickness: 6\n  })) : [];\n  const {\n    data,\n    options\n  } = configs(chart.labels || [], chartDatasets);\n  const renderChart = /*#__PURE__*/_jsxDEV(MDBox, {\n    py: 2,\n    pr: 2,\n    pl: icon.component ? 1 : 2,\n    children: [title || description ? /*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      px: description ? 1 : 0,\n      pt: description ? 1 : 0,\n      children: [icon.component && /*#__PURE__*/_jsxDEV(MDBox, {\n        width: \"4rem\",\n        height: \"4rem\",\n        bgColor: icon.color || \"info\",\n        variant: \"gradient\",\n        coloredShadow: icon.color || \"info\",\n        borderRadius: \"xl\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        mt: -5,\n        mr: 2,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"medium\",\n          children: icon.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mt: icon.component ? -2 : 0,\n        children: [title && /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          mb: 2,\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            component: \"div\",\n            variant: \"button\",\n            color: \"text\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null, useMemo(() => /*#__PURE__*/_jsxDEV(MDBox, {\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"line\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), [chart, height])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  return title || description ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 33\n  }, this) : renderChart;\n}\n\n// Setting default values for the props of DefaultLineChart\n_s(DefaultLineChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = DefaultLineChart;\nDefaultLineChart.defaultProps = {\n  icon: {\n    color: \"info\",\n    component: \"\"\n  },\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\"\n};\n\n// Typechecking props for the DefaultLineChart\nDefaultLineChart.propTypes = {\n  icon: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n    component: PropTypes.node\n  }),\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default DefaultLineChart;\nvar _c;\n$RefreshReg$(_c, \"DefaultLineChart\");","map":{"version":3,"names":["useMemo","PropTypes","Chart","Card","Icon","MDBox","MDTypography","configs","colors","jsxDEV","_jsxDEV","DefaultLineChart","icon","title","description","height","chart","_s","chartDatasets","datasets","map","dataset","tension","pointRadius","borderWidth","backgroundColor","fill","pointBackgroundColor","color","main","dark","borderColor","maxBarThickness","data","options","labels","renderChart","py","pr","pl","component","children","display","px","pt","width","bgColor","variant","coloredShadow","borderRadius","justifyContent","alignItems","mt","mr","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mb","type","_c","defaultProps","propTypes","shape","oneOf","node","string","oneOfType","number","objectOf","array","isRequired","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/examples/Charts/LineCharts/DefaultLineChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// DefaultLineChart configurations\nimport configs from \"examples/Charts/LineCharts/DefaultLineChart/configs\";\n\n// Material Dashboard 2 PRO React base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction DefaultLineChart({ icon, title, description, height, chart }) {\n  const chartDatasets = chart.datasets\n    ? chart.datasets.map((dataset) => ({\n        ...dataset,\n        tension: 0,\n        pointRadius: 3,\n        borderWidth: 4,\n        backgroundColor: \"transparent\",\n        fill: true,\n        pointBackgroundColor: colors[dataset.color]\n          ? colors[dataset.color || \"dark\"].main\n          : colors.dark.main,\n        borderColor: colors[dataset.color]\n          ? colors[dataset.color || \"dark\"].main\n          : colors.dark.main,\n        maxBarThickness: 6,\n      }))\n    : [];\n\n  const { data, options } = configs(chart.labels || [], chartDatasets);\n\n  const renderChart = (\n    <MDBox py={2} pr={2} pl={icon.component ? 1 : 2}>\n      {title || description ? (\n        <MDBox display=\"flex\" px={description ? 1 : 0} pt={description ? 1 : 0}>\n          {icon.component && (\n            <MDBox\n              width=\"4rem\"\n              height=\"4rem\"\n              bgColor={icon.color || \"info\"}\n              variant=\"gradient\"\n              coloredShadow={icon.color || \"info\"}\n              borderRadius=\"xl\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              color=\"white\"\n              mt={-5}\n              mr={2}\n            >\n              <Icon fontSize=\"medium\">{icon.component}</Icon>\n            </MDBox>\n          )}\n          <MDBox mt={icon.component ? -2 : 0}>\n            {title && <MDTypography variant=\"h6\">{title}</MDTypography>}\n            <MDBox mb={2}>\n              <MDTypography component=\"div\" variant=\"button\" color=\"text\">\n                {description}\n              </MDTypography>\n            </MDBox>\n          </MDBox>\n        </MDBox>\n      ) : null}\n      {useMemo(\n        () => (\n          <MDBox height={height}>\n            <Chart type=\"line\" data={data} options={options} />\n          </MDBox>\n        ),\n        [chart, height]\n      )}\n    </MDBox>\n  );\n\n  return title || description ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of DefaultLineChart\nDefaultLineChart.defaultProps = {\n  icon: { color: \"info\", component: \"\" },\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\",\n};\n\n// Typechecking props for the DefaultLineChart\nDefaultLineChart.propTypes = {\n  icon: PropTypes.shape({\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"light\",\n      \"dark\",\n    ]),\n    component: PropTypes.node,\n  }),\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default DefaultLineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}