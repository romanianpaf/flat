{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/cruds/user-management/new-user/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect, useState } from \"react\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport { InputLabel, Autocomplete } from \"@mui/material\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDAvatar from \"components/MDAvatar\";\n\n// Material Dashboard 2 PRO React examples\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport FormField from \"layouts/applications/wizard/components/FormField\";\nimport { useNavigate } from \"react-router-dom\";\nimport CrudService from \"services/cruds-service\";\nimport AuthService from \"services/auth-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUser = () => {\n  _s();\n  const navigate = useNavigate();\n  const [roles, setRoles] = useState([]);\n  const [image, setImage] = useState(\"\");\n  const [fileState, setFileState] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    role: \"\"\n  });\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState({\n    name: false,\n    email: false,\n    password: false,\n    confirm: false,\n    role: false,\n    error: false,\n    textError: \"\"\n  });\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await CrudService.getRoles();\n        setRoles(response.data);\n      } catch (err) {\n        console.error(err);\n        return null;\n      }\n    })();\n  }, []);\n  const changeHandler = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const changeImageHandler = e => {\n    const formData = new FormData();\n    formData.append(\"attachment\", e.target.files[0]);\n    setFileState(formData);\n    setImageUrl(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    const mailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (user.name.trim().length === 0) {\n      setError({\n        email: false,\n        role: false,\n        confirm: false,\n        password: false,\n        name: true,\n        textError: \"The name cannot be empty\"\n      });\n      return;\n    }\n    if (user.email.trim().length === 0 || !user.email.trim().match(mailFormat)) {\n      setError({\n        role: false,\n        confirm: false,\n        password: false,\n        name: false,\n        email: true,\n        textError: \"The email is not valid\"\n      });\n      return;\n    }\n    if (user.password.trim().length < 8) {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        confirm: false,\n        password: true,\n        textError: \"The password should have at least 8 characters\"\n      });\n      return;\n    }\n    if (user.confirm.trim() !== user.password.trim()) {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        password: false,\n        confirm: true,\n        textError: \"The password and password confirmation do not match\"\n      });\n      return;\n    }\n    if (value.id === \"\") {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        password: false,\n        confirm: false,\n        role: true,\n        textError: \"Role is required\"\n      });\n      return;\n    }\n    const newUser = {\n      data: {\n        type: \"users\",\n        attributes: {\n          name: user.name,\n          email: user.email,\n          password: user.password,\n          password_confirmation: user.confirm,\n          profile_image: null\n        },\n        relationships: {\n          roles: {\n            data: [{\n              id: value.id.toString(),\n              type: \"roles\"\n            }]\n          }\n        }\n      }\n    };\n    try {\n      const res = await CrudService.createUser(newUser);\n      try {\n        const {\n          url\n        } = await CrudService.imageUpload(fileState, res.data.id);\n        const userData = {\n          data: {\n            type: \"profile\",\n            attributes: {\n              profile_image: `${process.env.REACT_APP_IMAGES}${url}`\n            }\n          }\n        };\n        const toUpdateUser = {\n          data: {\n            id: res.data.id.toString(),\n            type: \"users\",\n            attributes: {\n              profile_image: fileState ? `${process.env.REACT_APP_IMAGES}${url}` : null\n            }\n          }\n        };\n        await CrudService.updateUser(toUpdateUser, res.data.id);\n      } catch (err) {\n        setError({\n          ...error,\n          error: true,\n          textError: err.message\n        });\n        return null;\n      }\n      navigate(\"/examples-api/user-management\", {\n        state: {\n          value: true,\n          text: \"The user was sucesfully created\"\n        }\n      });\n    } catch (err) {\n      if (err.hasOwnProperty(\"errors\")) {\n        setError({\n          ...error,\n          error: true,\n          textError: err.errors[0].detail\n        });\n      }\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      mt: 5,\n      mb: 9,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(MDBox, {\n            mt: 6,\n            mb: 8,\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(MDBox, {\n              mb: 1,\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"h3\",\n                fontWeight: \"bold\",\n                children: \"Add New User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n              variant: \"h5\",\n              fontWeight: \"regular\",\n              color: \"secondary\",\n              children: \"This information will describe more about the user.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(MDBox, {\n              component: \"form\",\n              method: \"POST\",\n              onSubmit: submitHandler,\n              encType: \"multipart/form-data\",\n              children: /*#__PURE__*/_jsxDEV(MDBox, {\n                display: \"flex\",\n                flexDirection: \"column\",\n                px: 3,\n                my: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: [/*#__PURE__*/_jsxDEV(FormField, {\n                      label: \"Name\",\n                      placeholder: \"Alec\",\n                      name: \"name\",\n                      value: user.name,\n                      onChange: changeHandler,\n                      error: error.name,\n                      inputProps: {\n                        autoComplete: \"name\",\n                        form: {\n                          autoComplete: \"off\"\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 23\n                    }, this), error.name && /*#__PURE__*/_jsxDEV(MDTypography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      fontWeight: \"light\",\n                      children: error.textError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: [/*#__PURE__*/_jsxDEV(FormField, {\n                      label: \"Email\",\n                      placeholder: \"example@email.com\",\n                      inputProps: {\n                        type: \"email\",\n                        autoComplete: \"email\",\n                        form: {\n                          autoComplete: \"off\"\n                        }\n                      },\n                      name: \"email\",\n                      value: user.email,\n                      onChange: changeHandler,\n                      error: error.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 23\n                    }, this), error.email && /*#__PURE__*/_jsxDEV(MDTypography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      fontWeight: \"light\",\n                      children: error.textError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  mt: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: [/*#__PURE__*/_jsxDEV(MDInput, {\n                      fullWidth: true,\n                      label: \"Current Password\",\n                      inputProps: {\n                        type: \"password\",\n                        autoComplete: \"\"\n                      },\n                      name: \"password\",\n                      value: user.password,\n                      onChange: changeHandler,\n                      error: error.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this), error.password && /*#__PURE__*/_jsxDEV(MDTypography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      fontWeight: \"light\",\n                      children: error.textError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: [/*#__PURE__*/_jsxDEV(MDInput, {\n                      fullWidth: true,\n                      label: \"Confirm Password\",\n                      inputProps: {\n                        type: \"password\",\n                        autoComplete: \"\"\n                      },\n                      name: \"confirm\",\n                      value: user.confirm,\n                      onChange: changeHandler,\n                      error: error.confirm\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this), error.confirm && /*#__PURE__*/_jsxDEV(MDTypography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      fontWeight: \"light\",\n                      children: error.textError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    fullWidth: true,\n                    marginBottom: \"1rem\",\n                    marginTop: \"2rem\",\n                    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n                      defaultValue: \"\",\n                      options: roles,\n                      getOptionLabel: option => option ? option.attributes.name : \"\",\n                      value: value !== null && value !== void 0 ? value : \"\",\n                      onChange: (event, newValue) => {\n                        setValue(newValue);\n                      },\n                      renderInput: params => /*#__PURE__*/_jsxDEV(FormField, {\n                        ...params,\n                        label: \"Role\",\n                        InputLabelProps: {\n                          shrink: true\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 23\n                    }, this), error.role && /*#__PURE__*/_jsxDEV(MDTypography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      fontWeight: \"light\",\n                      paddingTop: \"1rem\",\n                      children: error.textError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                      mt: 2,\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"demo-simple-select-label\",\n                        children: \"Profile Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(MDInput, {\n                        fullWidth: true,\n                        type: \"file\",\n                        name: \"attachment\",\n                        onChange: changeImageHandler,\n                        id: \"file-input\",\n                        accept: \"image/*\",\n                        sx: {\n                          mt: \"16px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 23\n                    }, this), imageUrl && /*#__PURE__*/_jsxDEV(MDBox, {\n                      ml: 4,\n                      mt: 2,\n                      children: /*#__PURE__*/_jsxDEV(MDAvatar, {\n                        src: imageUrl,\n                        alt: \"profile-image\",\n                        size: \"xxl\",\n                        shadow: \"sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), error.error && /*#__PURE__*/_jsxDEV(MDTypography, {\n                  variant: \"caption\",\n                  color: \"error\",\n                  fontWeight: \"light\",\n                  pt: 2,\n                  children: error.textError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                  ml: \"auto\",\n                  mt: 4,\n                  mb: 2,\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                    mx: 2,\n                    children: /*#__PURE__*/_jsxDEV(MDButton, {\n                      variant: \"gradient\",\n                      color: \"dark\",\n                      size: \"small\",\n                      px: 2,\n                      mx: 2,\n                      onClick: () => navigate(\"/examples-api/user-management\", {\n                        state: {\n                          value: false,\n                          text: \"\"\n                        }\n                      }),\n                      children: \"Back\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                    variant: \"gradient\",\n                    color: \"dark\",\n                    size: \"small\",\n                    type: \"submit\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(NewUser, \"880y8XDgtNK45xJlEGUpGa6iXlc=\", false, function () {\n  return [useNavigate];\n});\n_c = NewUser;\nexport default NewUser;\nvar _c;\n$RefreshReg$(_c, \"NewUser\");","map":{"version":3,"names":["useEffect","useState","Grid","Card","InputLabel","Autocomplete","MDBox","MDButton","MDTypography","MDInput","MDAvatar","DashboardLayout","DashboardNavbar","Footer","FormField","useNavigate","CrudService","AuthService","jsxDEV","_jsxDEV","NewUser","_s","navigate","roles","setRoles","image","setImage","fileState","setFileState","imageUrl","setImageUrl","user","setUser","name","email","password","confirm","role","value","setValue","error","setError","textError","response","getRoles","data","err","console","changeHandler","e","target","changeImageHandler","formData","FormData","append","files","URL","createObjectURL","submitHandler","preventDefault","mailFormat","trim","length","match","id","newUser","type","attributes","password_confirmation","profile_image","relationships","toString","res","createUser","url","imageUpload","userData","process","env","REACT_APP_IMAGES","toUpdateUser","updateUser","message","state","text","hasOwnProperty","errors","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","mt","mb","container","justifyContent","item","xs","lg","textAlign","variant","fontWeight","color","component","method","onSubmit","encType","display","flexDirection","px","my","spacing","sm","label","placeholder","onChange","inputProps","autoComplete","form","fullWidth","marginBottom","marginTop","defaultValue","options","getOptionLabel","option","event","newValue","renderInput","params","InputLabelProps","shrink","paddingTop","alignItems","accept","sx","ml","src","alt","size","shadow","pt","mx","onClick","_c","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/cruds/user-management/new-user/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect, useState } from \"react\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport { InputLabel, Autocomplete } from \"@mui/material\";\n\n// Material Dashboard 2 PRO React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDAvatar from \"components/MDAvatar\";\n\n// Material Dashboard 2 PRO React examples\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport FormField from \"layouts/applications/wizard/components/FormField\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport CrudService from \"services/cruds-service\";\nimport AuthService from \"services/auth-service\";\n\nconst NewUser = () => {\n  const navigate = useNavigate();\n  const [roles, setRoles] = useState([]);\n  const [image, setImage] = useState(\"\");\n  const [fileState, setFileState] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    role: \"\",\n  });\n\n  const [value, setValue] = useState(\"\");\n\n  const [error, setError] = useState({\n    name: false,\n    email: false,\n    password: false,\n    confirm: false,\n    role: false,\n    error: false,\n    textError: \"\",\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await CrudService.getRoles();\n        setRoles(response.data);\n      } catch (err) {\n        console.error(err);\n        return null;\n      }\n    })();\n  }, []);\n\n  const changeHandler = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const changeImageHandler = (e) => {\n    const formData = new FormData();\n    formData.append(\"attachment\", e.target.files[0]);\n    setFileState(formData);\n    setImageUrl(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    const mailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (user.name.trim().length === 0) {\n      setError({\n        email: false,\n        role: false,\n        confirm: false,\n        password: false,\n        name: true,\n        textError: \"The name cannot be empty\",\n      });\n      return;\n    }\n\n    if (user.email.trim().length === 0 || !user.email.trim().match(mailFormat)) {\n      setError({\n        role: false,\n        confirm: false,\n        password: false,\n        name: false,\n        email: true,\n        textError: \"The email is not valid\",\n      });\n      return;\n    }\n\n    if (user.password.trim().length < 8) {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        confirm: false,\n        password: true,\n        textError: \"The password should have at least 8 characters\",\n      });\n      return;\n    }\n\n    if (user.confirm.trim() !== user.password.trim()) {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        password: false,\n        confirm: true,\n        textError: \"The password and password confirmation do not match\",\n      });\n      return;\n    }\n\n    if (value.id === \"\") {\n      setError({\n        name: false,\n        email: false,\n        role: false,\n        password: false,\n        confirm: false,\n        role: true,\n        textError: \"Role is required\",\n      });\n      return;\n    }\n\n    const newUser = {\n      data: {\n        type: \"users\",\n        attributes: {\n          name: user.name,\n          email: user.email,\n          password: user.password,\n          password_confirmation: user.confirm,\n          profile_image: null,\n        },\n        relationships: {\n          roles: {\n            data: [\n              {\n                id: value.id.toString(),\n                type: \"roles\",\n              },\n            ],\n          },\n        },\n      },\n    };\n\n    try {\n      const res = await CrudService.createUser(newUser);\n      try {\n        const { url } = await CrudService.imageUpload(fileState, res.data.id);\n        const userData = {\n          data: {\n            type: \"profile\",\n            attributes: {\n              profile_image: `${process.env.REACT_APP_IMAGES}${url}`,\n            },\n          },\n        };\n        const toUpdateUser = {\n          data: {\n            id: res.data.id.toString(),\n            type: \"users\",\n            attributes: {\n              profile_image: fileState ? `${process.env.REACT_APP_IMAGES}${url}` : null,\n            },\n          },\n        };\n        await CrudService.updateUser(toUpdateUser, res.data.id);\n      } catch (err) {\n        setError({ ...error, error: true, textError: err.message });\n        return null;\n      }\n      navigate(\"/examples-api/user-management\", {\n        state: { value: true, text: \"The user was sucesfully created\" },\n      });\n    } catch (err) {\n      if (err.hasOwnProperty(\"errors\")) {\n        setError({ ...error, error: true, textError: err.errors[0].detail });\n      }\n      return null;\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <MDBox mt={5} mb={9}>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <MDBox mt={6} mb={8} textAlign=\"center\">\n              <MDBox mb={1}>\n                <MDTypography variant=\"h3\" fontWeight=\"bold\">\n                  Add New User\n                </MDTypography>\n              </MDBox>\n              <MDTypography variant=\"h5\" fontWeight=\"regular\" color=\"secondary\">\n                This information will describe more about the user.\n              </MDTypography>\n            </MDBox>\n            <Card>\n              <MDBox\n                component=\"form\"\n                method=\"POST\"\n                onSubmit={submitHandler}\n                encType=\"multipart/form-data\"\n              >\n                <MDBox display=\"flex\" flexDirection=\"column\" px={3} my={4}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                      <FormField\n                        label=\"Name\"\n                        placeholder=\"Alec\"\n                        name=\"name\"\n                        value={user.name}\n                        onChange={changeHandler}\n                        error={error.name}\n                        inputProps={{\n                          autoComplete: \"name\",\n                          form: {\n                            autoComplete: \"off\",\n                          },\n                        }}\n                      />\n                      {error.name && (\n                        <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\">\n                          {error.textError}\n                        </MDTypography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <FormField\n                        label=\"Email\"\n                        placeholder=\"example@email.com\"\n                        inputProps={{\n                          type: \"email\",\n                          autoComplete: \"email\",\n                          form: {\n                            autoComplete: \"off\",\n                          },\n                        }}\n                        name=\"email\"\n                        value={user.email}\n                        onChange={changeHandler}\n                        error={error.email}\n                      />\n                      {error.email && (\n                        <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\">\n                          {error.textError}\n                        </MDTypography>\n                      )}\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={3} mt={4}>\n                    <Grid item xs={12} sm={6}>\n                      <MDInput\n                        fullWidth\n                        label=\"Current Password\"\n                        inputProps={{ type: \"password\", autoComplete: \"\" }}\n                        name=\"password\"\n                        value={user.password}\n                        onChange={changeHandler}\n                        error={error.password}\n                      />\n                      {error.password && (\n                        <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\">\n                          {error.textError}\n                        </MDTypography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <MDInput\n                        fullWidth\n                        label=\"Confirm Password\"\n                        inputProps={{ type: \"password\", autoComplete: \"\" }}\n                        name=\"confirm\"\n                        value={user.confirm}\n                        onChange={changeHandler}\n                        error={error.confirm}\n                      />\n                      {error.confirm && (\n                        <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\">\n                          {error.textError}\n                        </MDTypography>\n                      )}\n                    </Grid>\n                  </Grid>\n                  <MDBox display=\"flex\" flexDirection=\"column\" fullWidth>\n                    <MDBox\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      fullWidth\n                      marginBottom=\"1rem\"\n                      marginTop=\"2rem\"\n                    >\n                      <Autocomplete\n                        defaultValue=\"\"\n                        options={roles}\n                        getOptionLabel={(option) => (option ? option.attributes.name : \"\")}\n                        value={value ?? \"\"}\n                        onChange={(event, newValue) => {\n                          setValue(newValue);\n                        }}\n                        renderInput={(params) => (\n                          <FormField {...params} label=\"Role\" InputLabelProps={{ shrink: true }} />\n                        )}\n                      />\n                      {error.role && (\n                        <MDTypography\n                          variant=\"caption\"\n                          color=\"error\"\n                          fontWeight=\"light\"\n                          paddingTop=\"1rem\"\n                        >\n                          {error.textError}\n                        </MDTypography>\n                      )}\n                    </MDBox>\n                    <MDBox\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                      fullWidth\n                    >\n                      <MDBox mt={2} display=\"flex\" flexDirection=\"column\">\n                        <InputLabel id=\"demo-simple-select-label\">Profile Image</InputLabel>\n                        <MDInput\n                          fullWidth\n                          type=\"file\"\n                          name=\"attachment\"\n                          onChange={changeImageHandler}\n                          id=\"file-input\"\n                          accept=\"image/*\"\n                          sx={{ mt: \"16px\" }}\n                        ></MDInput>\n                      </MDBox>\n\n                      {imageUrl && (\n                        <MDBox ml={4} mt={2}>\n                          <MDAvatar src={imageUrl} alt=\"profile-image\" size=\"xxl\" shadow=\"sm\" />\n                        </MDBox>\n                      )}\n                    </MDBox>\n                  </MDBox>\n                  {error.error && (\n                    <MDTypography variant=\"caption\" color=\"error\" fontWeight=\"light\" pt={2}>\n                      {error.textError}\n                    </MDTypography>\n                  )}\n                  <MDBox ml=\"auto\" mt={4} mb={2} display=\"flex\" justifyContent=\"flex-end\">\n                    <MDBox mx={2}>\n                      <MDButton\n                        variant=\"gradient\"\n                        color=\"dark\"\n                        size=\"small\"\n                        px={2}\n                        mx={2}\n                        onClick={() =>\n                          navigate(\"/examples-api/user-management\", {\n                            state: { value: false, text: \"\" },\n                          })\n                        }\n                      >\n                        Back\n                      </MDButton>\n                    </MDBox>\n                    <MDButton variant=\"gradient\" color=\"dark\" size=\"small\" type=\"submit\">\n                      Save\n                    </MDButton>\n                  </MDBox>\n                </MDBox>\n              </MDBox>\n            </Card>\n          </Grid>\n        </Grid>\n      </MDBox>\n      <Footer />\n    </DashboardLayout>\n  );\n};\n\nexport default NewUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}