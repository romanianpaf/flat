{"ast":null,"code":"import CrudService from\"services/cruds-service\";export const getPermissions=async id=>{try{const res=await CrudService.getUserWithPermissions(id);const permissions=res.included;let jsonPermissions=[];permissions.map(permission=>{if(permission.type==\"permissions\"){const namePermission=permission.attributes.name.split(\" \");if(namePermission.length===2){const action=namePermission[0];const subject=namePermission[1];if((action===\"delete\"||action===\"edit\")&&subject===\"users\"){jsonPermissions=[...jsonPermissions,{action,subject,conditions:{id:{$ne:id}}}];}else{jsonPermissions=[...jsonPermissions,{action,subject}];}}}});return jsonPermissions;}catch(err){console.error(err);return null;}};","map":{"version":3,"names":["CrudService","getPermissions","id","res","getUserWithPermissions","permissions","included","jsonPermissions","map","permission","type","namePermission","attributes","name","split","length","action","subject","conditions","$ne","err","console","error"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/config/Permissions/index.js"],"sourcesContent":["import CrudService from \"services/cruds-service\";\n\nexport const getPermissions = async (id) => {\n  try {\n    const res = await CrudService.getUserWithPermissions(id);\n    const permissions = res.included;\n    let jsonPermissions = [];\n    permissions.map((permission) => {\n      if (permission.type == \"permissions\") {\n        const namePermission = permission.attributes.name.split(\" \");\n        if (namePermission.length === 2) {\n          const action = namePermission[0];\n          const subject = namePermission[1];\n          if ((action === \"delete\" || action === \"edit\") && subject === \"users\") {\n            jsonPermissions = [\n              ...jsonPermissions,\n              { action, subject, conditions: { id: { $ne: id } } },\n            ];\n          } else {\n            jsonPermissions = [...jsonPermissions, { action, subject }];\n          }\n        }\n      }\n    });\n    return jsonPermissions;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,wBAAwB,CAEhD,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAH,WAAW,CAACI,sBAAsB,CAACF,EAAE,CAAC,CACxD,KAAM,CAAAG,WAAW,CAAGF,GAAG,CAACG,QAAQ,CAChC,GAAI,CAAAC,eAAe,CAAG,EAAE,CACxBF,WAAW,CAACG,GAAG,CAAEC,UAAU,EAAK,CAC9B,GAAIA,UAAU,CAACC,IAAI,EAAI,aAAa,CAAE,CACpC,KAAM,CAAAC,cAAc,CAAGF,UAAU,CAACG,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAC5D,GAAIH,cAAc,CAACI,MAAM,GAAK,CAAC,CAAE,CAC/B,KAAM,CAAAC,MAAM,CAAGL,cAAc,CAAC,CAAC,CAAC,CAChC,KAAM,CAAAM,OAAO,CAAGN,cAAc,CAAC,CAAC,CAAC,CACjC,GAAI,CAACK,MAAM,GAAK,QAAQ,EAAIA,MAAM,GAAK,MAAM,GAAKC,OAAO,GAAK,OAAO,CAAE,CACrEV,eAAe,CAAG,CAChB,GAAGA,eAAe,CAClB,CAAES,MAAM,CAAEC,OAAO,CAAEC,UAAU,CAAE,CAAEhB,EAAE,CAAE,CAAEiB,GAAG,CAAEjB,EAAG,CAAE,CAAE,CAAC,CACrD,CACH,CAAC,IAAM,CACLK,eAAe,CAAG,CAAC,GAAGA,eAAe,CAAE,CAAES,MAAM,CAAEC,OAAQ,CAAC,CAAC,CAC7D,CACF,CACF,CACF,CAAC,CAAC,CACF,MAAO,CAAAV,eAAe,CACxB,CAAE,MAAOa,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAClB,MAAO,KAAI,CACb,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}