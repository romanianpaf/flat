{"ast":null,"code":"var _jsxFileName = \"/home/atria/public_html/f1.atria.live/atria/frontend/src/context/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\n\nimport { createContext, useContext, useEffect, useMemo, useReducer, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport CrudService from \"services/cruds-service\";\nimport AuthService from \"services/auth-service\";\n\n// The Material Dashboard 2 PRO React main context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaterialUI = /*#__PURE__*/createContext();\n\n// the authentication context\nexport const AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  login: () => {},\n  register: () => {},\n  logout: () => {},\n  getCurrentUser: () => {},\n  getRole: () => {}\n});\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (!token) return;\n    setIsAuthenticated(true);\n    navigate(location.pathname);\n  }, []);\n  useEffect(() => {\n    if (!token) return;\n    navigate(location.pathname);\n  }, [isAuthenticated]);\n  const login = newToken => {\n    localStorage.setItem(\"token\", newToken);\n    setIsAuthenticated(true);\n    navigate(\"/dashboard/analytics\");\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsAuthenticated(false);\n    navigate(\"/auth/login\");\n  };\n  const getCurrentUser = async () => {\n    try {\n      const res = await AuthService.getProfile();\n      return res.data.id;\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n  const getRole = async () => {\n    // first get the current user id\n    const id = await getCurrentUser();\n    try {\n      // second I get the user with role\n      const res = await CrudService.getUser(id);\n      const roleId = res.data.relationships.roles.data[0].id;\n      // third check the role id and return the role type\n      if (roleId === \"1\") {\n        return \"admin\";\n      }\n      if (roleId === \"2\") {\n        return \"creator\";\n      }\n      if (roleId === 3) {\n        return \"member\";\n      }\n      return res.included[0].attributes.name;\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      login,\n      logout,\n      getRole,\n      getCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n// Setting custom name for the context which is visible on react dev tools\n_s(AuthContextProvider, \"jMCtXRutq1yztFcYYBzdl9ShHwo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nMaterialUI.displayName = \"MaterialUIContext\";\n\n// Material Dashboard 2 PRO React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\":\n      {\n        return {\n          ...state,\n          miniSidenav: action.value\n        };\n      }\n    case \"TRANSPARENT_SIDENAV\":\n      {\n        return {\n          ...state,\n          transparentSidenav: action.value\n        };\n      }\n    case \"WHITE_SIDENAV\":\n      {\n        return {\n          ...state,\n          whiteSidenav: action.value\n        };\n      }\n    case \"SIDENAV_COLOR\":\n      {\n        return {\n          ...state,\n          sidenavColor: action.value\n        };\n      }\n    case \"TRANSPARENT_NAVBAR\":\n      {\n        return {\n          ...state,\n          transparentNavbar: action.value\n        };\n      }\n    case \"FIXED_NAVBAR\":\n      {\n        return {\n          ...state,\n          fixedNavbar: action.value\n        };\n      }\n    case \"OPEN_CONFIGURATOR\":\n      {\n        return {\n          ...state,\n          openConfigurator: action.value\n        };\n      }\n    case \"DIRECTION\":\n      {\n        return {\n          ...state,\n          direction: action.value\n        };\n      }\n    case \"LAYOUT\":\n      {\n        return {\n          ...state,\n          layout: action.value\n        };\n      }\n    case \"DARKMODE\":\n      {\n        return {\n          ...state,\n          darkMode: action.value\n        };\n      }\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\n// Material Dashboard 2 PRO React context provider\nfunction MaterialUIControllerProvider({\n  children\n}) {\n  _s2();\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false\n  };\n  const [controller, dispatch] = useReducer(reducer, initialState);\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n  return /*#__PURE__*/_jsxDEV(MaterialUI.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 10\n  }, this);\n}\n\n// Material Dashboard 2 PRO React custom hook for using context\n_s2(MaterialUIControllerProvider, \"81RFlW77D3yJWSxAra/wFN4HnBU=\");\n_c2 = MaterialUIControllerProvider;\nfunction useMaterialUIController() {\n  _s3();\n  const context = useContext(MaterialUI);\n  if (!context) {\n    throw new Error(\"useMaterialUIController should be used inside the MaterialUIControllerProvider.\");\n  }\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\n_s3(useMaterialUIController, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({\n  type: \"MINI_SIDENAV\",\n  value\n});\nconst setTransparentSidenav = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_SIDENAV\",\n  value\n});\nconst setWhiteSidenav = (dispatch, value) => dispatch({\n  type: \"WHITE_SIDENAV\",\n  value\n});\nconst setSidenavColor = (dispatch, value) => dispatch({\n  type: \"SIDENAV_COLOR\",\n  value\n});\nconst setTransparentNavbar = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_NAVBAR\",\n  value\n});\nconst setFixedNavbar = (dispatch, value) => dispatch({\n  type: \"FIXED_NAVBAR\",\n  value\n});\nconst setOpenConfigurator = (dispatch, value) => dispatch({\n  type: \"OPEN_CONFIGURATOR\",\n  value\n});\nconst setDirection = (dispatch, value) => dispatch({\n  type: \"DIRECTION\",\n  value\n});\nconst setLayout = (dispatch, value) => dispatch({\n  type: \"LAYOUT\",\n  value\n});\nconst setDarkMode = (dispatch, value) => dispatch({\n  type: \"DARKMODE\",\n  value\n});\nexport { AuthContextProvider, MaterialUIControllerProvider, useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav, setSidenavColor, setTransparentNavbar, setFixedNavbar, setOpenConfigurator, setDirection, setLayout, setDarkMode };\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthContextProvider\");\n$RefreshReg$(_c2, \"MaterialUIControllerProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useReducer","useState","PropTypes","useLocation","useNavigate","CrudService","AuthService","jsxDEV","_jsxDEV","MaterialUI","AuthContext","isAuthenticated","login","register","logout","getCurrentUser","getRole","AuthContextProvider","children","_s","setIsAuthenticated","navigate","location","token","localStorage","getItem","pathname","newToken","setItem","removeItem","res","getProfile","data","id","err","console","error","getUser","roleId","relationships","roles","included","attributes","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","displayName","reducer","state","action","type","miniSidenav","transparentSidenav","whiteSidenav","sidenavColor","transparentNavbar","fixedNavbar","openConfigurator","direction","layout","darkMode","Error","MaterialUIControllerProvider","_s2","initialState","controller","dispatch","_c2","useMaterialUIController","_s3","context","propTypes","node","isRequired","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","setSidenavColor","setTransparentNavbar","setFixedNavbar","setOpenConfigurator","setDirection","setLayout","setDarkMode","$RefreshReg$"],"sources":["/home/atria/public_html/f1.atria.live/atria/frontend/src/context/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-pro-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\n\nimport { createContext, useContext, useEffect, useMemo, useReducer, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nimport CrudService from \"services/cruds-service\";\nimport AuthService from \"services/auth-service\";\n\n// The Material Dashboard 2 PRO React main context\nconst MaterialUI = createContext();\n\n// the authentication context\nexport const AuthContext = createContext({\n  isAuthenticated: false,\n  login: () => {},\n  register: () => {},\n  logout: () => {},\n  getCurrentUser: () => {},\n  getRole: () => {},\n});\n\nconst AuthContextProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (!token) return;\n    setIsAuthenticated(true);\n    navigate(location.pathname);\n  }, []);\n\n  useEffect(() => {\n    if (!token) return;\n    navigate(location.pathname);\n  }, [isAuthenticated]);\n\n  const login = (newToken) => {\n    localStorage.setItem(\"token\", newToken);\n    setIsAuthenticated(true);\n    navigate(\"/dashboard/analytics\");\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsAuthenticated(false);\n    navigate(\"/auth/login\");\n  };\n\n  const getCurrentUser = async () => {\n    try {\n      const res = await AuthService.getProfile();\n      return res.data.id;\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n\n  const getRole = async () => {\n    // first get the current user id\n    const id = await getCurrentUser();\n    try {\n      // second I get the user with role\n      const res = await CrudService.getUser(id);\n      const roleId = res.data.relationships.roles.data[0].id;\n      // third check the role id and return the role type\n      if (roleId === \"1\") {\n        return \"admin\";\n      }\n      if (roleId === \"2\") {\n        return \"creator\";\n      }\n      if (roleId === 3) {\n        return \"member\";\n      }\n      return res.included[0].attributes.name;\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, login, logout, getRole, getCurrentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Setting custom name for the context which is visible on react dev tools\nMaterialUI.displayName = \"MaterialUIContext\";\n\n// Material Dashboard 2 PRO React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\": {\n      return { ...state, miniSidenav: action.value };\n    }\n    case \"TRANSPARENT_SIDENAV\": {\n      return { ...state, transparentSidenav: action.value };\n    }\n    case \"WHITE_SIDENAV\": {\n      return { ...state, whiteSidenav: action.value };\n    }\n    case \"SIDENAV_COLOR\": {\n      return { ...state, sidenavColor: action.value };\n    }\n    case \"TRANSPARENT_NAVBAR\": {\n      return { ...state, transparentNavbar: action.value };\n    }\n    case \"FIXED_NAVBAR\": {\n      return { ...state, fixedNavbar: action.value };\n    }\n    case \"OPEN_CONFIGURATOR\": {\n      return { ...state, openConfigurator: action.value };\n    }\n    case \"DIRECTION\": {\n      return { ...state, direction: action.value };\n    }\n    case \"LAYOUT\": {\n      return { ...state, layout: action.value };\n    }\n    case \"DARKMODE\": {\n      return { ...state, darkMode: action.value };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// Material Dashboard 2 PRO React context provider\nfunction MaterialUIControllerProvider({ children }) {\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false,\n  };\n\n  const [controller, dispatch] = useReducer(reducer, initialState);\n\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n\n  return <MaterialUI.Provider value={value}>{children}</MaterialUI.Provider>;\n}\n\n// Material Dashboard 2 PRO React custom hook for using context\nfunction useMaterialUIController() {\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\n      \"useMaterialUIController should be used inside the MaterialUIControllerProvider.\"\n    );\n  }\n\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({ type: \"MINI_SIDENAV\", value });\nconst setTransparentSidenav = (dispatch, value) => dispatch({ type: \"TRANSPARENT_SIDENAV\", value });\nconst setWhiteSidenav = (dispatch, value) => dispatch({ type: \"WHITE_SIDENAV\", value });\nconst setSidenavColor = (dispatch, value) => dispatch({ type: \"SIDENAV_COLOR\", value });\nconst setTransparentNavbar = (dispatch, value) => dispatch({ type: \"TRANSPARENT_NAVBAR\", value });\nconst setFixedNavbar = (dispatch, value) => dispatch({ type: \"FIXED_NAVBAR\", value });\nconst setOpenConfigurator = (dispatch, value) => dispatch({ type: \"OPEN_CONFIGURATOR\", value });\nconst setDirection = (dispatch, value) => dispatch({ type: \"DIRECTION\", value });\nconst setLayout = (dispatch, value) => dispatch({ type: \"LAYOUT\", value });\nconst setDarkMode = (dispatch, value) => dispatch({ type: \"DARKMODE\", value });\n\nexport {\n  AuthContextProvider,\n  MaterialUIControllerProvider,\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  setSidenavColor,\n  setTransparentNavbar,\n  setFixedNavbar,\n  setOpenConfigurator,\n  setDirection,\n  setLayout,\n  setDarkMode,\n};\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAE3F;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,uBAAuB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,gBAAGb,aAAa,CAAC,CAAC;;AAElC;AACA,OAAO,MAAMc,WAAW,gBAAGd,aAAa,CAAC;EACvCe,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,OAAO,EAAEA,CAAA,KAAM,CAAC;AAClB,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACR,eAAe,EAAES,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C3B,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,KAAK,EAAE;IACZH,kBAAkB,CAAC,IAAI,CAAC;IACxBC,QAAQ,CAACC,QAAQ,CAACI,QAAQ,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,KAAK,EAAE;IACZF,QAAQ,CAACC,QAAQ,CAACI,QAAQ,CAAC;EAC7B,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;EAErB,MAAMC,KAAK,GAAIe,QAAQ,IAAK;IAC1BH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCP,kBAAkB,CAAC,IAAI,CAAC;IACxBC,QAAQ,CAAC,sBAAsB,CAAC;EAClC,CAAC;EAED,MAAMP,MAAM,GAAGA,CAAA,KAAM;IACnBU,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCT,kBAAkB,CAAC,KAAK,CAAC;IACzBC,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,MAAMN,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMe,GAAG,GAAG,MAAMxB,WAAW,CAACyB,UAAU,CAAC,CAAC;MAC1C,OAAOD,GAAG,CAACE,IAAI,CAACC,EAAE;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMlB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B;IACA,MAAMiB,EAAE,GAAG,MAAMlB,cAAc,CAAC,CAAC;IACjC,IAAI;MACF;MACA,MAAMe,GAAG,GAAG,MAAMzB,WAAW,CAACgC,OAAO,CAACJ,EAAE,CAAC;MACzC,MAAMK,MAAM,GAAGR,GAAG,CAACE,IAAI,CAACO,aAAa,CAACC,KAAK,CAACR,IAAI,CAAC,CAAC,CAAC,CAACC,EAAE;MACtD;MACA,IAAIK,MAAM,KAAK,GAAG,EAAE;QAClB,OAAO,OAAO;MAChB;MACA,IAAIA,MAAM,KAAK,GAAG,EAAE;QAClB,OAAO,SAAS;MAClB;MACA,IAAIA,MAAM,KAAK,CAAC,EAAE;QAChB,OAAO,QAAQ;MACjB;MACA,OAAOR,GAAG,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,IAAI;IACxC,CAAC,CAAC,OAAOT,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,OAAO,IAAI;IACb;EACF,CAAC;EAED,oBACE1B,OAAA,CAACE,WAAW,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAElC,eAAe;MAAES,kBAAkB;MAAER,KAAK;MAAEE,MAAM;MAAEE,OAAO;MAAED;IAAe,CAAE;IAAAG,QAAA,EAC1GA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA9B,EAAA,CAxEMF,mBAAmB;EAAA,QAGNb,WAAW,EACXD,WAAW;AAAA;AAAA+C,EAAA,GAJxBjC,mBAAmB;AAyEzBR,UAAU,CAAC0C,WAAW,GAAG,mBAAmB;;AAE5C;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MAAE;QACnB,OAAO;UAAE,GAAGF,KAAK;UAAEG,WAAW,EAAEF,MAAM,CAACT;QAAM,CAAC;MAChD;IACA,KAAK,qBAAqB;MAAE;QAC1B,OAAO;UAAE,GAAGQ,KAAK;UAAEI,kBAAkB,EAAEH,MAAM,CAACT;QAAM,CAAC;MACvD;IACA,KAAK,eAAe;MAAE;QACpB,OAAO;UAAE,GAAGQ,KAAK;UAAEK,YAAY,EAAEJ,MAAM,CAACT;QAAM,CAAC;MACjD;IACA,KAAK,eAAe;MAAE;QACpB,OAAO;UAAE,GAAGQ,KAAK;UAAEM,YAAY,EAAEL,MAAM,CAACT;QAAM,CAAC;MACjD;IACA,KAAK,oBAAoB;MAAE;QACzB,OAAO;UAAE,GAAGQ,KAAK;UAAEO,iBAAiB,EAAEN,MAAM,CAACT;QAAM,CAAC;MACtD;IACA,KAAK,cAAc;MAAE;QACnB,OAAO;UAAE,GAAGQ,KAAK;UAAEQ,WAAW,EAAEP,MAAM,CAACT;QAAM,CAAC;MAChD;IACA,KAAK,mBAAmB;MAAE;QACxB,OAAO;UAAE,GAAGQ,KAAK;UAAES,gBAAgB,EAAER,MAAM,CAACT;QAAM,CAAC;MACrD;IACA,KAAK,WAAW;MAAE;QAChB,OAAO;UAAE,GAAGQ,KAAK;UAAEU,SAAS,EAAET,MAAM,CAACT;QAAM,CAAC;MAC9C;IACA,KAAK,QAAQ;MAAE;QACb,OAAO;UAAE,GAAGQ,KAAK;UAAEW,MAAM,EAAEV,MAAM,CAACT;QAAM,CAAC;MAC3C;IACA,KAAK,UAAU;MAAE;QACf,OAAO;UAAE,GAAGQ,KAAK;UAAEY,QAAQ,EAAEX,MAAM,CAACT;QAAM,CAAC;MAC7C;IACA;MAAS;QACP,MAAM,IAAIqB,KAAK,CAAE,0BAAyBZ,MAAM,CAACC,IAAK,EAAC,CAAC;MAC1D;EACF;AACF;;AAEA;AACA,SAASY,4BAA4BA,CAAC;EAAEjD;AAAS,CAAC,EAAE;EAAAkD,GAAA;EAClD,MAAMC,YAAY,GAAG;IACnBb,WAAW,EAAE,KAAK;IAClBC,kBAAkB,EAAE,KAAK;IACzBC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,MAAM;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE,IAAI;IACjBC,gBAAgB,EAAE,KAAK;IACvBC,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM,CAACK,UAAU,EAAEC,QAAQ,CAAC,GAAGvE,UAAU,CAACoD,OAAO,EAAEiB,YAAY,CAAC;EAEhE,MAAMxB,KAAK,GAAG9C,OAAO,CAAC,MAAM,CAACuE,UAAU,EAAEC,QAAQ,CAAC,EAAE,CAACD,UAAU,EAAEC,QAAQ,CAAC,CAAC;EAE3E,oBAAO/D,OAAA,CAACC,UAAU,CAACmC,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EAAEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC5E;;AAEA;AAAAmB,GAAA,CArBSD,4BAA4B;AAAAK,GAAA,GAA5BL,4BAA4B;AAsBrC,SAASM,uBAAuBA,CAAA,EAAG;EAAAC,GAAA;EACjC,MAAMC,OAAO,GAAG9E,UAAU,CAACY,UAAU,CAAC;EAEtC,IAAI,CAACkE,OAAO,EAAE;IACZ,MAAM,IAAIT,KAAK,CACb,iFACF,CAAC;EACH;EAEA,OAAOS,OAAO;AAChB;;AAEA;AAAAD,GAAA,CAZSD,uBAAuB;AAahCN,4BAA4B,CAACS,SAAS,GAAG;EACvC1D,QAAQ,EAAEhB,SAAS,CAAC2E,IAAI,CAACC;AAC3B,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACR,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,cAAc;EAAEV;AAAM,CAAC,CAAC;AACrF,MAAMmC,qBAAqB,GAAGA,CAACT,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,qBAAqB;EAAEV;AAAM,CAAC,CAAC;AACnG,MAAMoC,eAAe,GAAGA,CAACV,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,eAAe;EAAEV;AAAM,CAAC,CAAC;AACvF,MAAMqC,eAAe,GAAGA,CAACX,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,eAAe;EAAEV;AAAM,CAAC,CAAC;AACvF,MAAMsC,oBAAoB,GAAGA,CAACZ,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,oBAAoB;EAAEV;AAAM,CAAC,CAAC;AACjG,MAAMuC,cAAc,GAAGA,CAACb,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,cAAc;EAAEV;AAAM,CAAC,CAAC;AACrF,MAAMwC,mBAAmB,GAAGA,CAACd,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,mBAAmB;EAAEV;AAAM,CAAC,CAAC;AAC/F,MAAMyC,YAAY,GAAGA,CAACf,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,WAAW;EAAEV;AAAM,CAAC,CAAC;AAChF,MAAM0C,SAAS,GAAGA,CAAChB,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,QAAQ;EAAEV;AAAM,CAAC,CAAC;AAC1E,MAAM2C,WAAW,GAAGA,CAACjB,QAAQ,EAAE1B,KAAK,KAAK0B,QAAQ,CAAC;EAAEhB,IAAI,EAAE,UAAU;EAAEV;AAAM,CAAC,CAAC;AAE9E,SACE5B,mBAAmB,EACnBkD,4BAA4B,EAC5BM,uBAAuB,EACvBM,cAAc,EACdC,qBAAqB,EACrBC,eAAe,EACfC,eAAe,EACfC,oBAAoB,EACpBC,cAAc,EACdC,mBAAmB,EACnBC,YAAY,EACZC,SAAS,EACTC,WAAW;AACX,IAAAtC,EAAA,EAAAsB,GAAA;AAAAiB,YAAA,CAAAvC,EAAA;AAAAuC,YAAA,CAAAjB,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}